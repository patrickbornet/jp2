<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="[jp]" lang="ja-JP" xmlns:mixi="http://mixi-platform.com/ns#" xmlns:og="http://ogp.me/ns#"> <head>   <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />   <script type="text/javascript" src="http://www.sankeibiz.jp/smp/js/redirect_v20110902/rd.js" data-redirect-pattern="1"></script>   <script type="text/javascript" src="http://sankei2ad.durasite.net/A-affiliate2/mobile?keyword=biz.news.interstitial&amp;site=118"></script>   <!-- chartbeat -->   <script type="text/javascript">if(location.protocol != "file:") {	var _sf_startpt=(new Date()).getTime()}</script>   <!-- chartbeat end -->   <meta name="robots" content="nocache,noarchive" />   <meta property="og:title" content="[metatags_title]" />   <meta property="og:type" content="article" />   <meta property="og:url" content="http://www.sankeibiz.jp/business/news/170729/bsa1707290500003-n1.htm" />   <meta property="og:description" content="[metatags_description]" />   <link rel="next" href="http://www.sankeibiz.jp/business/news/170729/bsa1707290500003-n2.htm" />   <meta property="og:image" content="http://www.sankeibiz.jp/images/news/170729/bsa1707290500003-p1.jpg" />   <link rel="image_src" href="http://www.sankeibiz.jp/images/news/170729/bsa1707290500003-p1.jpg" />   <link rel="amphtml" href="http://www.sankeibiz.jp/business/amp/170729/bsa1707290500003-a.htm" />   <meta name="twitter:card" content="summary_large_image" />   <meta name="twitter:site" content="@SankeiBiz_jp" />   <meta name="twitter:title" content="[metatags_title]" />   <meta name="twitter:description" content="[metatags_description]" />   <meta name="twitter:image" content="http://www.sankeibiz.jp/images/news/170729/bsa1707290500003-p1.jpg" />   <meta name="twitter:url" content="http://www.sankeibiz.jp/business/news/170729/bsa1707290500003-n1.htm" />   <meta name="dcterms.identifier" content="kqeqoacoaoeq" />   <meta name="dcterms.subject" content="CA07" />   <script type="text/javascript" src="https://apis.google.com/js/plusone.js">  {lang: 'ja'}</script>   <meta property="aja:title" content="[metatags_title]" />   <meta property="aja:content_id" content="kqeqoacoaoeq" data-aja-request="" />   <meta property="aja:kv.genre" content="企業" data-aja-request="" />   <meta property="aja:published_date" content="2017-07-29" />   <meta name="keywords" content="[metatags_keywords]" />   <meta name="description" content="[metatags_description]" />   <title>[metatags_title]</title>   <!--__biz1_css_pagetype_start__-->   <link href="http://www.sankeibiz.jp/css/news_v20170403000/SetNewsDetail.css" rel="stylesheet" type="text/css" />   <!--__biz1_css_pagetype_end__-->   <link rel="stylesheet" href="https://static.aja-recommend.com/css/aja_sankeibiz_pc.css" />    <!--__biz1_js_pagetype_end__-->   <!-- Facebook Pixel Code -->   <script>!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,document,'script','https://connect.facebook.net/en_US/fbevents.js');fbq('init', '605684226303625'); // Insert your pixel ID here.fbq('track', 'PageView');</script>   <noscript></noscript> </head> <body>  [imagex]   <!-- DO NOT MODIFY -->   <!-- End Facebook Pixel Code -->   <script>fbq('track', 'ViewContent');</script>   <meta property="fb:app_id" content="1377287975648188" />   <script src="http://www.sankeibiz.jp/common/js/others/pushcrew.js"></script>   <link rel="alternate" type="application/rss+xml" title="SankeiBiz:企業ニュース" href="../../../rss/news/business.xml" />   <link rel="alternate" type="application/rss+xml" title="SankeiBiz:自動車ニュース" href="../../../rss/news/automotive.xml" />  [hrefx]   <div id="fb-root"></div>   <script></script>   <div id="chgview"></div>   <script src="http://www.sankeibiz.jp/smp/js/redirect_v20110902/b.js" type="text/javascript"></script>   <!--__biz1_header_business_start__-->   <div id="Header">    <!--__biz1_newsnavigation_business_start__-->    <div id="NewsNavigationTop">     <div class="logo">     [hrefx]    </div>     <ul id="nav">      <li class="menu01">[hrefx]</li>    </ul>     <li class="menu02">[hrefx]</li>     <li class="menu03">[hrefx]</li>     <li class="menu04">[hrefx]</li>     <li class="menu05">[hrefx]</li>     <li class="menu06">[hrefx]</li>     <li class="menu07">[hrefx]</li>     <li class="menu08">[hrefx]</li>     <li class="menu09">[hrefx]</li>      <div class="SNS-link">          <div class="icon">      [hrefx]     </div>      <div class="icon">      [hrefx]     </div>      <!-- Facebook Messanger -->      <div id="fbMessanger" class="icon">       <button class="fbmIcon">[imagex]</button>       <div class="fbmWrapper close">        [imagex]        <p class="head">Facebook Messanger登録</p>        <p class="catch">あなたに合わせたニュースを毎日お届け</p> [imagex]        <span style="display:none" class="skduiSocialButtonMg" data-social-type="pack[fb]"></span>        <div id="fbmGuide">         [hrefx][metatags_description]        <div class="fbmClose">         <span class="fbmButton"></span>        </div>[metatags_description]       </div>[metatags_description]      </div>       <!--__biz1_newsnavigation_business_end__-->[metatags_description]      <!--__biz1_header_business_end__-->       <div id="adTopPRBanner01">        <!-- begin ad biz.company.premiere.head tag -->        <script language="JavaScript" type="text/javascript"></script>        <!-- end ad biz.company.premiere.head tag -->[metatags_description]       <div id="Container">         <div id="additional" class="news-flash"></div>         <script type="text/javascript"><!--loaderHTML("http://www.sankeibiz.jp/module/sys/news/alert.html","#additional");// --></script>         <!--__biz1_contents_business_start__-->         <div id="Contents">          <!-- begin ad biz.news.640x40 tag -->          <script language="JavaScript" type="text/javascript"></script>          <!-- end ad biz.news.640x40 tag -->          <ul id="TopicPath">           <li>現在位置：[hrefx]</li>           <li>[hrefx]</li>           <li>[hrefx]</li>           <li>ニュース詳細</li>          </ul>          <!--__biz1_genre_business_start__-->          <div id="Genre">          <h2>[H2]</h2>          <div class="subGenre">           <ul>            <li class="first">[hrefx]</li>           </ul>          </div>         </div>          <!--__biz1_genre_business_end__-->          <div id="NewsTitle">           <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>           <div class="tools">            <p class="date">            <!-- date --><span id="__r_publish_date__">2017.7.29 06:16</span>            <!-- date end --></p>            <div class="tool">             [hrefx]            <script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>             <div class="fb-like" data-href="http://www.sankeibiz.jp/business/news/170729/bsa1707290500003-n1.htm" data-layout="button_count" data-action="recommend" data-show-faces="true" data-share="false"></div> [hrefx] [hrefx][metatags_description]           </div>[metatags_description]           <div id="adPR00">             <!-- begin ad biz.company.text.01 tag -->             <script language="JavaScript" type="text/javascript"></script>             <!-- end ad biz.company.text.01 tag -->             <!-- begin ad biz.company.text.02 tag -->             <script language="JavaScript" type="text/javascript"></script>             <!-- end ad biz.company.text.02 tag -->[metatags_description]            <div id="NewsDetail">              <div class="PhotoArea04">               <p class="MainPhoto">[hrefx][metatags_description]               <!-- begin ad biz.news.read.banner tag --> <script language="JavaScript" type="text/javascript"></script>                <!-- end ad biz.news.read.banner tag -->[metatags_description]               <!-- google_ad_section_start(name=s1) -->               <!-- article -->               <!--__pis_article_start__-->[metatags_description]               <!--__pis_article_end__-->               <!-- article end -->               <!-- google_ad_section_end(name=s1) -->[metatags_description]</p>              <li>[imagex]</li>               <li>[imagex]</li>               <li>[hrefx]</li>               <li>[hrefx]</li>              </div>[metatags_description]             <div id="RelatedNews02" class="sysapp_relatedLinks">              <ul>                <li>                <dl>                 <dt>                  [hrefx]                 </dt>                </dl></li>                <li>                <dl>                 <dt>                  [hrefx]                 </dt>                </dl></li>                <li>                <dl>                 <dt>                  [hrefx]                 </dt>                </dl></li>                <li>                <dl>                 <dt>                  [hrefx]                 </dt>                </dl></li>                <li>                <dl>                 <dt>                  [hrefx]                 </dt>                </dl></li>               </ul>             </div>              <!-- begin ad biz.company.inread tag -->              <script language="JavaScript" type="text/javascript"></script>              <!-- end ad biz.company.inread tag -->              <!--__biz1_layout2_business_start__-->              <div class="Layout2">               <!-- Creative google by ads for news -->               <div>                <div>                <script type="text/javascript" language="JavaScript" src="http://www.sankeibiz.jp/js/ad/adEx_display1.js"></script>               </div>                <div>                <script type="text/javascript" language="JavaScript" src="http://www.sankeibiz.jp/js/ad/adEx_display2.js"></script>               </div>[metatags_description]               <!-- End Creative -->                <!--__biz1_leftarea_business_start__-->                <div class="LeftArea">                 <div id="RelatedNews" class="sysapp_relatedLinks">                 <h3>[H3]</h3>                 <ul>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                   <li>[hrefx][imagex]</li>                  </ul>                </div>                 <div class="ajarecommend">                  <div class="ajarecommend-title">                  今、あなたにオススメ                 </div>                  <div id="ajapc" class="ajarecommend-frame ajarecommend-text ajarecommend-frame__list__col1"></div>                  <div class="ajarecommend-credit">                  Recommended by[hrefx]                 </div>[metatags_description]                 <script type="text/javascript" charset="utf-8" src="https://static.aja-recommend.com/js/aja_sankeibiz_pc.js"></script>                  <div class="OUTBRAIN" data-src="http://www.sankeibiz.jp/business/news/170729/bsa1707290500003-n1.htm" data-widget-id="AR_5" data-ob-template="SankeiBizJapan"></div>                  <div id="parts_business"></div>                  <script type="text/javascript"><!--loaderHTML("http://www.sankeibiz.jp/parts/news/business.htm","#parts_business");// --></script>[metatags_description]                 <!--__biz1_leftarea_business_end__-->                  <!--__biz1_rightarea_business_start__-->                  <div class="RightArea">                   <div class="snsButton">                    <div class="button">                    [hrefx]                   </div>                    <div class="button">                    [hrefx]                   </div>                    <div class="button">                    [hrefx]                   </div>[metatags_description]                   <div id="parts_topics"></div>                    <script type="text/javascript"><!--loaderHTML("http://www.sankeibiz.jp/parts/topics/topics.htm","#parts_topics");// --></script>[metatags_description]                   <!--__biz1_rightarea_business_end__-->                    <!--__biz1_footer_ad_start__-->                    <div id="adMegaBanner">                     <!-- begin ad biz.company.640x360 tag -->                     <script language="JavaScript" type="text/javascript"></script>                     <!-- end ad biz.company.640x360 tag -->[metatags_description]                    <!--__biz1_footer_ad_end__-->[metatags_description]                    <!--__biz1_layout2_business_end__-->[metatags_description]                    <!--__biz1_contents_business_end__-->                     <!--__biz1_sidebar_business_start__-->                     <div id="Sidebar">                      <div class="sideFixedWrapper">                       <div id="SankeiDigitalServiveBanner">                        <!-- begin ad biz.all.300x50 tag -->                        <script language="JavaScript" type="text/javascript"></script>                        <!-- end ad biz.all.300x50 tag -->[metatags_description]                       <div id="Search">                         [metatags_description]                        <div id="adRectangleBanner01">                          <!-- begin ad biz.company.300x250.01 tag -->                          <script language="JavaScript" type="text/javascript"></script>                          <!-- end ad biz.company.300x250.01 tag -->                          <script type="text/javascript" src="//static.criteo.net/js/ld/publishertag.js"></script>                          <div id="717076" style="width:300px;height:600px;"></div>                          <script type="text/javascript"></script>[metatags_description]                          <div id="adTrend">                          <h3>[H3]</h3>                          <div class="InnerBox">                            <!-- begin ad biz.company.trend.01 tag -->                            <script language="JavaScript" type="text/javascript"></script>                            <!-- end ad biz.company.trend.01 tag -->                            <!-- begin ad biz.company.trend.02 tag -->                            <script language="JavaScript" type="text/javascript"></script>                            <!-- end ad biz.company.trend.02 tag -->                            <div class="TextList">                             <!-- begin ad biz.company.trend.txt.01 tag -->                             <script language="JavaScript" type="text/javascript"></script>                             <!-- end ad biz.company.trend.txt.01 tag -->                             <!-- begin ad biz.company.trend.txt.02 tag -->                             <script language="JavaScript" type="text/javascript"></script>                             <!-- end ad biz.company.trend.txt.02 tag -->                             <!-- begin ad biz.company.trend.txt.03 tag -->                             <script language="JavaScript" type="text/javascript"></script>                             <!-- end ad biz.company.trend.txt.03 tag -->                             <!-- begin ad biz.company.trend.txt.04 tag -->                             <script language="JavaScript" type="text/javascript"></script>                             <!-- end ad biz.company.trend.txt.04 tag -->                             <!-- begin ad biz.company.trend.txt.05 tag -->                             <script language="JavaScript" type="text/javascript"></script>                             <!-- end ad biz.company.trend.txt.05 tag -->                             <!-- begin ad biz.company.trend.txt.06 tag -->                             <script language="JavaScript" type="text/javascript"></script>                             <!-- end ad biz.company.trend.txt.06 tag -->                            </div>                          </div>                         </div>                          <div id="parts_databox"></div>                          <script type="text/javascript"><!--loaderHTML("http://www.sankeibiz.jp/parts/data/databox.htm","#parts_databox");// --></script>                          <div id="rankingWidget">                           <div class="rankingTab">                            [hrefs] [hrefs] [hrefs] [hrefs] [hrefs][metatags_description]                           <div class="rankingBody">                             <section data-limit="5" class="access accessRankingWidget" data-rank-term="hourly">                              <div class="js-holder"></div>                             </section>                             <section data-limit="5" class="social socialRankingWidget">                              <div class="js-holder"></div>                             </section>[metatags_description]                            <div class="toRankingPage">                             <span class="hrTopDot">[hrefx]</span>                            </div>                             <script src="http://www.sankeibiz.jp/common/js/v1/widget/rankingWidget.js"></script>[metatags_description]                            <div id="adSidebarSpecial">                              <div class="bizSpecial">                               <div class="special">                                <h2>[H2]</h2>                                <!-- begin ad biz.all.special.280x120 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.280x120 tag -->                                <!-- begin ad biz.all.special.txt.01 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.txt.01 tag -->                                <!-- begin ad biz.all.special.txt.02 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.txt.02 tag -->                                <!-- begin ad biz.all.special.txt.03 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.txt.03 tag -->                                <!-- begin ad biz.all.special.txt.04 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.txt.04 tag -->                                <!-- begin ad biz.all.special.txt.05 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.txt.05 tag -->                                <!-- begin ad biz.all.special.txt.06 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.txt.06 tag -->                                <!-- begin ad biz.all.special.txt.07 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.txt.07 tag -->                                <!-- begin ad biz.all.special.txt.08 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.special.txt.08 tag -->[metatags_description]                              </div>[metatags_description]                               <div id="adRectangleBanner02">                                <!-- begin ad biz.company.300x250.02 tag -->                                <script language="JavaScript" type="text/javascript">}</script>                                <!-- end ad biz.company.300x250.02 tag -->                                <!-- begin ad sd.biz.300x250.02 tag -->                                <script src="http://img.ll.impact-ad.jp/dc/bta/b/BU.SANKEI.js"></script>                                <script type="text/javascript"></script>                                <!-- end ad sd.biz.300x250.02 tag -->[metatags_description]                               <div id="parts_points"></div>                                <script type="text/javascript"><!--loaderHTML("http://www.sankeibiz.jp/parts/news/points.htm","#parts_points");// --></script>                                <div id="Banner01">                                [hrefx]                               </div>                                <!-- cyclistModule -->                                <div id="cyclistModule"></div>                                <script type="text/javascript"><!--loaderHTML("http://www.sankeibiz.jp/parts/cyclist/cyclistmodule.html","#cyclistModule");// --></script>                                <!-- cyclistModule -->                                <!-- begin ad biz.all.300x250.03 tag -->                                <script language="JavaScript" type="text/javascript"></script>                                <!-- end ad biz.all.300x250.03 tag -->                              </div>[metatags_description]                              <!--__biz1_sidebar_business_end__-->[metatags_description]                              <div id="SankeiDigitalServive">                                <h2>[H2]</h2>                                <div class="block">                                 <dl>                                  <dt>                                  [hrefx]                                 </dt>                                  <dd>                                   <h3>[H3]</h3>                                   <p>[hrefx]</p>                                  </dd>                                 </dl>[metatags_description]                                <div class="block">                                  <dl>                                   <dt>                                   [hrefx]                                  </dt>                                   <dd>                                    <h3>[H3]</h3>                                    <p>[hrefx]</p>                                   </dd>                                  </dl>[metatags_description]                                 <div class="block">                                   <dl>                                    <dt>                                    [hrefx]                                   </dt>                                    <dd>                                     <h3>[H3]</h3>                                     <p>[hrefx]</p>                                    </dd>                                   </dl>[metatags_description]                                  <div class="block">                                    <dl>                                     <dt>                                     [hrefx]                                    </dt>                                     <dd>                                      <h3>[H3]</h3>                                      <p>[hrefx]</p>                                     </dd>                                    </dl>[metatags_description]                                  </div>                                   <!--__biz1_footer_all_start__-->                                   <div id="Footer">                                   <div id="FooterMenu01">                                    <ul class="FooterNavigation">                                     <li class="first">[hrefx]</li>                                    </ul>                                   </div>                                  </div>                                 </div>                                  <!--__biz1_footer_all_end__-->                                  <script type="text/javascript" src="http://www.sankeibiz.jp/common/js/v1/all/init.js"></script>                                  <!-- chartbeat -->                                  <script type="text/javascript"></script>                                  <!-- chartbeat end -->                                  <script type="text/javascript" src="//cf.eco-tag.jp/asi/asi-pix-sankeibiz-min.js"></script>                                  <script type="text/javascript" src="http://b.ranking.apis.sankei-digital.co.jp/biz/ranking/js/__rnk_a.20160609.js"></script>                                  <script src="http://www.sankeibiz.jp/js/popin/loadPopIn.js" type="text/javascript" charset="UTF-8"></script>                                   </div>                               </div>                              </div>                             </div>                            </div>                           </div>                          </div>                         </div>                        </div>                       </div>                      </div>                     </div>                    </div>                   </div>                  </div>                 </div>                </div>               </div>              </div>             </div>            </div>           </div>          </div>         </div>        </div>       </div>      </div>     </div>    </div>   </div>  </div> </body></html>