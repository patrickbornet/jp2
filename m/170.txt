<!DOCTYPE html><!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="[语言]"> <![endif]--><!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="zh"> <![endif]--><!--[if IE 8]>    <html class="no-js lt-ie9" lang="zh"> <![endif]--><!--[if gt IE 8]><!--><html class="no-js" lang="zh"> <!--<![endif]--><head>    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>    <!--Google fonts-->  <link href='//fonts.googleapis.com/css?family=Lato:300,400,700' rel='stylesheet' type='text/css'>  <title>[metatags_title]</title>  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"4af5ec0209","applicationID":"6147723","transactionName":"e1oPQUILXl9XRk4RXktBEhpDDF1E","queueTime":0,"applicationTime":445,"ttGuid":"","agentToken":null,"agent":""}</script><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var o=n[t]={exports:{}};e[t][0].call(o.exports,function(n){var o=e[t][1][n];return r(o||n)},o,o.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<t.length;o++)r(t[o]);return r}({1:[function(e,n,t){function r(){}function o(e,n,t){return function(){return i(e,[c.now()].concat(u(arguments)),n?null:this,t),n?void 0:this}}var i=e("handle"),a=e(2),u=e(3),f=e("ee").get("tracer"),c=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],d="api-",l=d+"ixn-";a(p,function(e,n){s[n]=o(d+n,!0,"api")}),s.addPageAction=o(d+"addPageAction",!0),s.setCurrentRouteName=o(d+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,o="function"==typeof n;return i(l+"tracer",[c.now(),e,t],r),function(){if(f.emit((o?"":"no-")+"fn-start",[c.now(),r,o],t),o)try{return n.apply(this,arguments)}finally{f.emit("fn-end",[c.now()],t)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=o(l+n)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,c.now()])}},{}],2:[function(e,n,t){function r(e,n){var t=[],r="",i=0;for(r in e)o.call(e,r)&&(t[i]=n(r,e[r]),i+=1);return t}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],3:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,o=t-n||0,i=Array(o<0?0:o);++r<o;)i[r]=e[n+r];return i}n.exports=r},{}],4:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function o(e){function n(e){return e&&e instanceof r?e:e?f(e,u,i):i()}function t(t,r,o,i){if(!d.aborted||i){e&&e(t,r,o);for(var a=n(o),u=m(t),f=u.length,c=0;c<f;c++)u[c].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function l(e,n){v[e]=m(e).concat(n)}function m(e){return v[e]||[]}function w(e){return p[e]=p[e]||o(t)}function g(e,n){c(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var v={},y={},b={on:l,emit:t,get:w,listeners:m,context:n,buffer:g,abort:a,aborted:!1};return b}function i(){return new r}function a(){(s.api||s.feature)&&(d.aborted=!0,s=d.backlog={})}var u="nr@context",f=e("gos"),c=e(2),s={},p={},d=n.exports=o();d.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(o.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){o.buffer([e],r),o.emit(e,n,t)}var o=e("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=h.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();c(y,function(n,t){e[n]||(e[n]=t)}),f("mark",["onload",a()+h.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function o(){"complete"===d.readyState&&i()}function i(){f("mark",["domContent",a()+h.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(u=Math.max((new Date).getTime(),u))-h.offset}var u=(new Date).getTime(),f=e("handle"),c=e(2),s=e("ee"),p=window,d=p.document,l="addEventListener",m="attachEvent",w=p.XMLHttpRequest,g=w&&w.prototype;NREUM.o={ST:setTimeout,SI:p.setImmediate,CT:clearTimeout,XHR:w,REQ:p.Request,EV:p.Event,PR:p.Promise,MO:p.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1044.min.js"},b=w&&g&&g[l]&&!/CriOS/.test(navigator.userAgent),h=n.exports={offset:u,now:a,origin:v,features:{},xhrWrappable:b};e(1),d[l]?(d[l]("DOMContentLoaded",i,!1),p[l]("load",r,!1)):(d[m]("onreadystatechange",o),p[m]("onload",r)),f("mark",["firstbyte",u],null,"api");var x=0,E=e(4)},{}]},{},["loader"]);</script>  <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="description" content="[metatags_description]">    <link href="//images.dannychoo.com/media/favicon-7827551023c3574f2c0f5de021f8c258.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" />    <link href="//images.dannychoo.com/media/apple-touch-icon-6ea2d7609afb71a825500bbdbea5ae39.png" rel="apple-touch-icon" type="image/png" />    <link href="//images.dannychoo.com/media/apple-touch-icon-72x72-c746b1471479beb156781991fb653fcb.png" rel="apple-touch-icon" sizes="72x72" type="image/png" />    <link href="//images.dannychoo.com/media/apple-touch-icon-114x114-f516564c8155dd19244c521adabd76a5.png" rel="apple-touch-icon" sizes="114x114" type="image/png" />    <link href="http://feeds.feedburner.com/dannychoo_com_main_article_feed_zh?format=xml" rel="alternate" title="Culture Japan - Your portal to Japan" type="application/rss+xml" />        <style type="text/css">  body {    /*background-image: url("body_backgrounds.sample");*/  }  #chibi-footer {    background-image: url("//images.dannychoo.com/media/backgrounds/japan-footer-92c0ce84a84d79c544cad7ff6bb0306a.png");  }  #mascot-running-left {    background-image: url("http://farm5.static.flickr.com/4139/5487470965_976c3c8b4a_o.gif");  }  #mascot-running-middle {    background-image: url("http://farm6.static.flickr.com/5138/5488066230_affbb07367_o.gif");  }  #mascot-running-right {    background-image: url("http://farm6.static.flickr.com/5058/5488066334_9fe8c4a8d2_o.gif");  }</style>  <link href="//static.dannychoo.com/assets/application-3585fcb633c4116dec5342795b6e2863.css" media="screen" rel="stylesheet" type="text/css" />  <!-- shop_scripts -->  <link href="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/japanese_fonts.scss?11795772257993313874" rel="stylesheet" type="text/css" media="all">  <link href="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/timber.scss.css?11795772257993313874" rel="stylesheet" type="text/css" media="all">  <link href="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/jquery.fancybox.scss?11795772257993313874" rel="stylesheet" type="text/css" media="all"><!-- //shop_scripts --><!-- merge_style --><style type="text/css">  h2,  h3,  h4,  h5,  h6 {    letter-spacing: 0;  }  #admin-nav {    margin-bottom: 0;    top: 53px;    background-color: transparent;    z-index: 7;  }  @media only screen and (max-width: 960px) {    #admin-nav {      top: 52px;    }    .dropdown-menu.off-canvas {      margin-top: 0 !important;    }  }  .navbar .navbar-collapse {    box-shadow: none !important;    border: none !important;  }  .navbar-nav {    margin-top: 0 !important;    margin-bottom: 0 !important;  }  .navbar-nav li {    margin: 0;  }  .nav-stacked {    margin: 0 !important;  }  .nav-bar {    position: relative;    z-index: 7;  }  .dropdown-menu.off-canvas {    height: auto !important;    background-color: rgba(255, 255, 255, 0.9) !important;  }  #utility_bar {    background-color: rgba(255, 255, 255, 0.9);  }  .dropdown-toggle .visible-xs-inline {    display: none !important;  }  .yamm .yamm-content {    padding: 15px !important;  }  .site-nav .glyphicon {    font-size: 1.2em;  }  .site-header__logo-link {    max-width: 200px;  }  .mobile-nav .profile-info {    padding: 15px 15px 0;  }  .mobile-nav .profile-name {    margin: 0;  }  .mobile-nav .profile-name a,  .mobile-nav .profile-name a:hover {    padding: 15px 0;    text-decoration: none;  }  .drawer--right {    width: 300px;    right: -300px;    border-left: 1px solid #e9e9e9  }  .js-drawer-open-right .drawer--right {    display: block;    -ms-transform: translateX(-300px);    -webkit-transform: translateX(-300px);    transform: translateX(-300px)  }  .js-drawer-open-right .is-moved-by-drawer {    -ms-transform: translateX(-300px);    -webkit-transform: translateX(-300px);    transform: translateX(-300px);  }  .drawer--right h4,  .drawer--left h4 {    padding: 15px 0;    color: #ff2200;  }  .site-nav__link {    text-decoration: none !important;  }  .fancybox-opened .fancybox-skin {    box-shadow: none;    -webkit-box-shadow: none;    -moz-box-shadow: none;  }  .fancybox-skin {    background: none;  }  .fancybox-overlay {    background-image: none;  }  .localize__modal .localize__change-link {    color: #333;    text-decoration: none;    display: inline-block;  }  body.posts .post-header .title {    font-weight: 300;    line-height: 1;    margin-top: 45px;    margin-bottom: 15px;  }  body.posts .post-header .meta {    font-size: 16px;    margin-bottom: 30px;  }  body.layout-posts-smart-doll .post-header .title {    margin-bottom: 45px;  }  body.layout-posts-smart-doll .post-header .meta {    display: none;  }  body.posts .jumbotron {    background: #fff;  }  body.posts .jumbotron p {    font-size: inherit;    font-weight: normal;  }  body.posts .image-description {    margin: 30px 0;  }  .post-images a {    text-decoration: underline;  }  .post-images strong a {    text-decoration: none;  }  .grid__availability .grid__item {    margin-top: 60px;    text-align: center;    padding: 0 15px;  }  .image-description .grid__availability:first-child {    margin-top: 0;  }  .grid__availability .icon {    color: #b3b3b3;    font-size: 30px;  }  .grid__availability .sub-title,  .grid__availability .learn-more {    margin: 0;  }  .next-post {    margin-bottom: 60px;  }  .pagination-header,  .page-heading,  .posts-new-content,  .profiles-show-content {    margin-top: 45px;  }  .discover-more-posts {    margin: 30px 0;  }  .discover-more-posts h4 {    text-transform: none;    font-weight: normal;    font-size: 16px;    letter-spacing: 0;  }  .discover-more-posts .thumbnail-small {    margin-bottom: 30px;  }  .discover-more-posts .thumbnail-small > a {    margin-bottom: 7.5px;  }  body.layout-posts-smart-doll .tags.row {    display: none !important;  }  .toggle-site-comments-btn,  .toggle-facebook-comments-btn,  .toggle-twitter-comments-btn,  .toggle-instagram-comments-btn {    border-bottom-left-radius: 50% !important;    border-top-left-radius: 50% !important;    border-bottom-right-radius: 50% !important;    border-top-right-radius: 50% !important;    margin-right: 10px !important;    padding: 6px !important;    width: 38px !important;    height: 38px !important;  }  .toggle-site-comments-btn img,  .toggle-facebook-comments-btn img,  .toggle-twitter-comments-btn img,  .toggle-instagram-comments-btn img {    width: 100% !important;    position: relative !important;    top: -1px !important;  }  .toggle-site-comments-btn.hide-comments img,  .toggle-facebook-comments-btn.hide-comments img,  .toggle-twitter-comments-btn.hide-comments img,  .toggle-instagram-comments-btn.hide-comments img {    opacity: 0.5 !important;  }  .toggle-facebook-comments-btn {    background-color: #3b5998 !important;    border-color: #3b5998 !important;  }  .toggle-facebook-comments-btn:hover {    background-color: #2d4373 !important;    border-color: #2d4373 !important;  }  .toggle-facebook-comments-btn:active, .toggle-facebook-comments-btn:focus {    border-color: #2d4373 !important;    background-color: #3b5998 !important;  }  .toggle-twitter-comments-btn {    background-color: #55acee !important;    border-color: #55acee !important;  }  .toggle-twitter-comments-btn:hover {    background-color: #147bc9 !important;    border-color: #147bc9 !important;  }  .toggle-twitter-comments-btn:active, .toggle-twitter-comments-btn:focus {    border-color: #147bc9 !important;    background-color: #55acee !important;  }  .toggle-instagram-comments-btn {    background-color: #3f729b !important;    border-color: #3f729b !important;  }  .toggle-instagram-comments-btn:hover {    background-color: #223d52 !important;    border-color: #223d52 !important;  }  .toggle-instagram-comments-btn:active, .toggle-instagram-comments-btn:focus {    border-color: #223d52 !important;    background-color: #3f729b !important;  }  .comment .nested-comments > .comment:before,  .comment .nested-comments > .comment:after {    display: none;  }  footer h1,  footer h2,  footer h3,  footer h4,  footer h5,  footer h6,  footer .h1,  footer .h2,  footer .h3,  footer .h4,  footer .h5,  footer .h6 {    text-align: inherit;    letter-spacing: 0;  }  .footer-nav a {    text-decoration: none;  }  .site-footer .characters .grid__image {    text-decoration: none;  }  .site-footer .characters .grid__image .title {    text-align: center;  }  .localize-nav a {    color: #333;    text-decoration: none;  }  .localize-nav .separator {    margin: 0 3px;  }  body.admin table thead th {    border-top: 1px solid #ddd !important;    border-bottom: 1px solid #ddd !important;  }</style><!-- //merge_style -->  <script src="//static.dannychoo.com/assets/html5-31af083a03f7db2849a0ef06ae51e452.js" type="text/javascript"></script>  <!-- shop_scripts -->  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/modernizr.min.js?11795772257993313874" type="text/javascript"></script>  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/js.cookie.min.js?11795772257993313874" type="text/javascript"></script>  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/handlebars.min.js?11795772257993313874" type="text/javascript"></script>  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/fontfaceobserver.js?11795772257993313874" type="text/javascript"></script><!-- //shop_scripts -->  <meta content="authenticity_token" name="csrf-param" /><meta content="wGK8YIfRvzY4lrlFtUnDHynd3vmH1eGkUJYdFHZuO5E=" name="csrf-token" />    <style type="text/css">    footer .character-thumbnail img.hover {      width: 140%;      left: -20%;      z-index: 999;    }        footer .character-thumbnail img.normal {      width: 140%;      margin: 0 -20%;    }    /**********************    * Custom character grid    ***********************/    .col-character {      position: relative;      min-height: 1px;      padding-right: 15px;      padding-left: 15px;      overflow: hidden;    }    .col-character {      width: 50%;      float: left;    }    @media (min-width: 768px) {      .col-character {        width: 25%;        float: left;      	overflow: visible;      }          body.posts .post-header .title {      	font-size: 42px;      }    }    @media (min-width: 992px) {      .col-character {        width: 16.666%;        float: left;      }    }        /* Hide Comment Counts */    .comment-count {      display: none;    }        /* Square Image Gallery Fix */    body.posts .gallery .thumbnail-small .thumbnail-img,     body.images-show .gallery .thumbnail-small .thumbnail-img {      margin-left: 0;      left: 50%;      transform: translateX(-50%);    }        /*DELETE AFTER DEPLOYED*/  </style></head><body class="layout-posts-default posts posts-show" data-signin-path="/zh/signin"><a name="top"></a>  <div id="fb-root"></div>  <script>    window.fbAsyncInit = function() {      FB.init({        appId      : '143269119031653',        channelUrl : '//www.dannychoo.com/channel.html',        status     : true,        cookie     : true,        xfbml      : true      });    };    (function(d){       var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];       if (d.getElementById(id)) {return;}       js = d.createElement('script'); js.id = id; js.async = true;       js.src = "//connect.facebook.net/en_US/all.js";       ref.parentNode.insertBefore(js, ref);     }(document));  </script><header>    <div id="NavDrawer" class="drawer drawer--left">    <div class="drawer__header">      <div class="drawer__title h3">Navigation</div>      <div class="drawer__close js-drawer-close">        <button type="button" class="icon-fallback-text">          <span class="icon icon-x" aria-hidden="true"></span>          <span class="fallback-text">Close</span>        </button>      </div>    </div>    <!-- begin mobile-nav -->        <h4>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h4>        <ul class="mobile-nav">          <li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li>        </ul>        <h4>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h4>        <ul class="mobile-nav">          <li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>        <h4>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h4>        <ul class="mobile-nav">          <li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>        <h4>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h4>        <ul class="mobile-nav">          <li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li><li class="mobile-nav__item">[hrefx][hrefx][hrefx][hrefx]</li>        </ul>    <!-- //mobile-nav -->  </div>  <div id="SettingsDrawer" class="drawer drawer--right">    <div class="drawer__header">      <div class="drawer__title h3">Settings</div>      <div class="drawer__close js-drawer-close">        <button type="button" class="icon-fallback-text">          <span class="icon icon-x" aria-hidden="true"></span>          <span class="fallback-text">Close</span>        </button>      </div>    </div>        <!-- begin user-menu -->    <p class="mobile-nav__item">      <em>登录发表评论</em>      <br>    </p>    <ul class="mobile-nav">      <li class="mobile-nav__item">        [hrefx][hrefx][hrefx][hrefx][hrefx]      </li>      <li class="mobile-nav__item">          [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]      </li>    </ul>  <!-- //user-menu -->  </div>  <nav class="nav-bar" role="navigation">    <div class="medium-down--hide nav-bar__desktop">      <div class="wrapper">        <!-- begin branding -->        <div class="site-header__logo" itemscope="" itemtype="http://schema.org/Organization">          <a href="/zh" itemprop="url" class="site-header__logo-link site-nav__link">                <img alt="Culture Japan - Your portal to Japan" src="//images.dannychoo.com/media/logo-ad719aaf25f55d2b9c5e5291011b709a.png" />          </a>        </div>        <!-- //branding -->        <!-- begin site-nav -->        <ul class="site-nav site-nav__main" id="AccessibleNav">            <li>              <a class="site-nav__link">About</a>                <ul class="site-nav site-nav__sub">                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li>                </ul>            </li>            <li>              <a class="site-nav__link">Categories</a>                <ul class="site-nav site-nav__sub">                  <li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li>                </ul>            </li>            <li>              <a class="site-nav__link">Products</a>                <ul class="site-nav site-nav__sub">                  <li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li>                </ul>            </li>            <li>              <a class="site-nav__link">For Stalkers</a>                <ul class="site-nav site-nav__sub">                  <li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li>                </ul>            </li>        </ul>        <!-- //site-nav -->        <!-- begin utility -->        <div class="site-header__utility">          <ul class="site-nav">            <li>              <a href="#SearchContainer" class="open-search icon-fallback-text site-nav__link" aria-controls="SearchModal" aria-expanded="false">                <span class="icon icon-search" aria-hidden="true"></span>                <span class="fallback-text hidden-label">Search</span>              </a>            </li>            <li>              <a href="#LanguageContainer" class="open-language icon-fallback-text site-nav__link"                 aria-controls="LanguageModal" aria-expanded="false">                <span class="icon icon-language" aria-hidden="true"></span>                  <span class="fallback-text hidden-label">                    Select your language                  </span>              </a>            </li>            <li>              <a href="#SettingsDrawer" class="site-header__setting-toggle site-nav__link js-drawer-open-right"                 aria-controls="SettingsDrawer" aria-expanded="false">                <span class="glyphicon glyphicon-cog" aria-hidden="true">                </span>                <span class="fallback-text hidden-label">                  Settings                </span>              </a>            </li>          </ul>        </div>        <!-- //utility -->      </div>    </div>    <div class="large--hide medium-down--show nav-bar__mobile">      <div class="wrapper">        <div class="grid">          <div class="grid__item one-third">            <div class="site-nav--mobile">              <button type="button" class="icon-fallback-text site-nav__link js-drawer-open-left" aria-controls="NavDrawer" aria-expanded="false">                <span class="icon icon-hamburger" aria-hidden="true"></span>                <span class="fallback-text">Menu</span>              </button>              <a href="#LanguageContainer" class="open-language icon-fallback-text site-nav__link"                 aria-controls="LanguageModal" aria-expanded="false">                <span class="icon icon-language" aria-hidden="true"></span>                <span class="fallback-text hidden-label">Select your language</span>              </a>            </div>          </div>          <div class="grid__item one-third">            <div class="site-header__logo" itemscope="" itemtype="http://schema.org/Organization">              <a href="/zh" itemprop="url" class="site-header__logo-link site-nav__link">                    <img alt="Culture Japan - Your portal to Japan" src="//images.dannychoo.com/media/mobile-logo-606c487b37d970fb8ca1ed03dcee9130.png" />              </a>            </div>          </div>          <div class="grid__item one-third text-right">            <div class="site-nav--mobile">              <a href="#SearchContainer" class="open-search icon-fallback-text site-nav__link" aria-controls="SearchModal" aria-expanded="false">                <span class="icon icon-search" aria-hidden="true"></span>                <span class="fallback-text hidden-label">Search</span>              </a>              <a href="#SettingsDrawer" class="site-header__setting-toggle site-nav__link js-drawer-open-right"                 aria-controls="SettingsDrawer" aria-expanded="false">                <span class="glyphicon glyphicon-cog" aria-hidden="true"></span>                <span class="fallback-text hidden-label">Settings</span>              </a>            </div>          </div>        </div>      </div>    </div>  </nav><div class="visually-hidden">  <div id="SearchContainer">    <!-- /snippets/search-bar.liquid -->    <form action="/zh/posts/search" method="post" class="input-group search-bar" role="search">      <input type="search" name="search" value="" placeholder="Search" class="input-group-field" aria-label="Search our store">        <span class="input-group-btn">          <button type="submit" class="btn icon-fallback-text">            <span class="icon icon-search" aria-hidden="true"></span>            <span class="fallback-text">Search</span>          </button>        </span>    </form>  </div>  <div id="LanguageContainer">    <div class="localize__modal text-center">      <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>      <ul class="site-nav">          <li>            [hrefx][hrefx][hrefx][hrefx][hrefx]          </li>          <li>            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]          </li>          <li>            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]          </li>      </ul>    </div>  </div></div>  <div class="notifications"></div>  <div class="flash-messages"></div></header><div id="PageContainer" class="is-moved-by-drawer">        <div class="content posts-content posts-show-content">      <div class="post post-body" data-url="http://www.dannychoo.com/zh/posts/27960/edit.xhrt" id="post-27960">          <div class="container-fluid ">            <div class="post-header row">              <div class="col-xs-10 col-xs-offset-1">                <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>                <div class="meta">                  <div class="meta-post">                    On <span class="published-at">日 2017/07/30 14:10 JST</span>                    In                    <span class="category-trail">[hrefx][hrefx][hrefx]</span>                  </div>                  <div class="meta-stats">                    <span class="comment-count">[hrefx][hrefx][hrefx]</span>                    <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;7746</span>                    <span class="languages">                  [hrefx][hrefx][hrefx][hrefx]                  [hrefx][hrefx][hrefx][hrefx]              </span>                  </div>                </div>              </div>            </div>          </div>            <div class="post-images">                    <div class="post-image container-fluid">        <div class="row">          <div class="col-xs-12">        <div class="image-wrapper" data-annotations="true" data-edit="/zh/posts/27960/images/189455/edit.xhrt" data-image_id="189455" id="image_wrapper_189455" style="max-width:2048px;">    <div class="image" data-annotations_url="http://www.dannychoo.com/zh/images/189455/annotations" data-dimensions="2048x2048" data-id="189455" id="image_189455" style="background:url(//static.dannychoo.com/assets/base/loading-pulse-045597c93c2f909e49b330fab0c1346e.gif) 50% 50% no-repeat;padding-top:100.00%;">        <ul id="image-189455" class="options">            <li class="pull-right share">              <div class="dropdown image-dropdown">                [hrefx][hrefx][hrefx][hrefx]                <ul class="dropdown-menu dropdown-menu-right">                  <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li class="anchor-link">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                </ul>              </div>            </li>            <li class="pull-right image-annotation-link">              [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>            <li class="pull-right image-annotation-show">              <span><span class="glyphicon glyphicon-comment"></span>&nbsp;將鼠標移到圖片上以查看附註或評論</span>            </li>        </ul>      <img class="main" src="//images.dannychoo.com/cgm/images/post/20170730/27960/189455/original/8cae2758fb82013348e16665b9c0f106.JPG" style="position:absolute;width:100%;" /></div>      <div class="container-fluid">        <div class="row">          <div class="col-xs-12 col-sm-12 col-md-10 col-md-offset-1">            <div class="image-description" style=""></div>          </div>        </div>      </div></div>          </div>        </div>    </div>            </div>            <div class="container-fluid">              <div class="post-content row">                <div class="col-xs-12 col-sm-12 col-md-10 col-md-offset-1">                  <p>Nami Smart Doll at the Megahouse booth in Wonfes. <br>メガハウスブースでナミちゃんスマートドール逢えます。#smartdoll #Megahouse<br>[hrefx] (in Japanese)</p><p>[hrefx][hrefx][hrefx][hrefx][hrefx]</p>                </div>              </div>            </div>        <div class="container-fluid">            <div class="tags row">              <div class="col-xs-12">                  <span class="glyphicon glyphicon-tag"></span>&nbsp;[hrefx]              </div>            </div>        </div></div>    </div>    <div class="container-fluid">      <div class="related-posts row">        <div class="col-xs-12">          <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>            <div class="row">          <div class="col-xs-6 col-sm-6 col-md-3 post-27765 thumbnail-small">      <a href="/zh/post/27765/Dokomi+Smart+Doll+Lineup.html" title="Dokomi Smart Doll Lineup">        <img alt="Dokomi Smart Doll Lineup" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20170603/27765/189250/large/0277ad02b712641eda5dd947fbe53499.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/27765/Dokomi+Smart+Doll+Lineup.html" title="Dokomi Smart Doll Lineup">            Dokomi Smart Doll Lineup</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">六 2017/06/03</span>        <span class="comment-count">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;25195</span>      </div>    </div>  </div>        </div>      </div>      <div class="advert row">        <div class="col-sm-6">          [hrefx][hrefx][hrefx][hrefx][hrefx]        </div>        <div class="col-sm-6">          [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </div>      </div>      <div id="comments" class="comments row">        <div class="col-xs-12">          <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>            [hrefx][hrefx][hrefx][hrefx]          [hrefx][hrefx][hrefx][hrefx]          [hrefx][hrefx][hrefx][hrefx]          [hrefx][hrefx][hrefx][hrefx]          [hrefx][hrefx][hrefx][hrefx]        </div>        <div id="loading-list" class="col-xs-12">          <ol>            <li class="loading-comments"><img alt="Loading-pulse" src="//static.dannychoo.com/assets/base/loading-pulse-045597c93c2f909e49b330fab0c1346e.gif" /></li>          </ol>        </div>      </div>      <div class="most-recent-posts row">        <div class="col-xs-12">          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>            <div class="row">          <div class="col-xs-6 col-sm-6 col-md-3 post-27959 thumbnail-small">      <a href="/zh/post/27959/Nami+Smart+Doll.html" title="Nami Smart Doll">        <img alt="Nami Smart Doll" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20170729/27959/189454/large/e9680e5e0616a9ae871aa28b7c223aac.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/27959/Nami+Smart+Doll.html" title="Nami Smart Doll">            Nami Smart Doll</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">六 2017/07/29</span>        <span class="comment-count">[hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;14180</span>      </div>    </div>          <div class="col-xs-6 col-sm-6 col-md-3 post-27958 thumbnail-small">      <a href="/zh/post/27958/Jet+Lag+Potion+Found.html" title="Jet Lag Potion Found">        <img alt="Jet Lag Potion Found" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20170728/27958/189453/large/33f265c3ceb69a9af9d80ce69365f066.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/27958/Jet+Lag+Potion+Found.html" title="Jet Lag Potion Found">            Jet Lag Potion Found</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">五 2017/07/28</span>        <span class="comment-count">[hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;15429</span>      </div>    </div>        <div class="clearfix visible-xs-block visible-sm-block"></div>          <div class="col-xs-6 col-sm-6 col-md-3 post-27957 thumbnail-small">      <a href="/zh/post/27957/Looking+For+Jet+Lag+Potion.html" title="Looking For Jet Lag Potion">        <img alt="Looking For Jet Lag Potion" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20170728/27957/189452/large/ba18724695ffe2e21379c02e2ae61a2e.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/27957/Looking+For+Jet+Lag+Potion.html" title="Looking For Jet Lag Potion">            Looking For Jet Lag Potion</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">五 2017/07/28</span>        <span class="comment-count">[hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;14886</span>      </div>    </div>          <div class="col-xs-6 col-sm-6 col-md-3 post-27956 thumbnail-small">      <a href="/zh/post/27956/Tokyo+Touchdown.html" title="Tokyo Touchdown">        <img alt="Tokyo Touchdown" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20170728/27956/189451/large/8ad14430ad0cb982bf344cc512ce3429.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/27956/Tokyo+Touchdown.html" title="Tokyo Touchdown">            Tokyo Touchdown</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">五 2017/07/28</span>        <span class="comment-count">[hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;14942</span>      </div>    </div>  </div>        </div>      </div>      <div class="currently-being-read-posts row">        <div class="col-xs-12">          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>            <div class="row">          <div class="col-xs-6 col-sm-6 col-md-3 post-27112 thumbnail-small">      <a href="/zh/post/27112/20131216+%E6%9B%B4%E6%96%B0.html" title="20131216：更新">        <img alt="20131216：更新" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20131215/27112/178930/large/ce9a6af06bd943892c706997d7b32270.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/27112/20131216+%E6%9B%B4%E6%96%B0.html" title="20131216：更新">            20131216：更新</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">一 2013/12/16</span>        <span class="comment-count">[hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;800759</span>      </div>    </div>          <div class="col-xs-6 col-sm-6 col-md-3 post-26100 thumbnail-small">      <a href="/zh/post/26100/Good+Smile+Company+10%E9%80%B1%E5%B9%B4%E6%85%B6.html" title="Good Smile Company 10週年慶">        <img alt="Good Smile Company 10週年慶" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20110501/26100/122547/large/3a3246a546299b0a7bf5a0d1e80a18cf.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/26100/Good+Smile+Company+10%E9%80%B1%E5%B9%B4%E6%85%B6.html" title="Good Smile Company 10週年慶">            Good Smile Company 10週年慶</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">一 2011/05/02</span>        <span class="comment-count">[hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;548472</span>      </div>    </div>        <div class="clearfix visible-xs-block visible-sm-block"></div>          <div class="col-xs-6 col-sm-6 col-md-3 post-25852 thumbnail-small">      <a href="/zh/post/25852/%E7%9F%B3%E5%B7%9D%E5%85%89%E4%B9%85.html" title="石川光久">        <img alt="石川光久" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20101016/25852/107707/large/651bf580f7e854c3f927323aedbe80df.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/25852/%E7%9F%B3%E5%B7%9D%E5%85%89%E4%B9%85.html" title="石川光久">            石川光久</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">六 2010/10/16</span>        <span class="comment-count">[hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;230739</span>      </div>    </div>          <div class="col-xs-6 col-sm-6 col-md-3 post-26043 thumbnail-small">      <a href="/zh/post/26043/Culture+Japan%E7%AC%AC%E4%B8%80%E5%AD%A3%E6%91%98%E8%A6%81.html" title="Culture Japan第一季摘要">        <img alt="Culture Japan第一季摘要" class="thumbnail-img" src="//images.dannychoo.com/cgm/images/post/20110308/26043/118904/large/693f90208cb6f6833a216f9fb39e7fa8.jpg" /></a>      <div class="caption">        <h4>          <a href="/zh/post/26043/Culture+Japan%E7%AC%AC%E4%B8%80%E5%AD%A3%E6%91%98%E8%A6%81.html" title="Culture Japan第一季摘要">            Culture Japan第一季摘要</a>        </h4>      </div>      <div class="meta small">        <span class="published-at">二 2011/03/08</span>        <span class="comment-count">[hrefx]</span>        <span class="view-count "><span class="glyphicon glyphicon-fire"></span>&nbsp;574074</span>      </div>    </div>  </div>        </div>      </div>      <div class="advert row">        <div class="col-sm-6">                  </div>        <div class="col-sm-6">                  </div>      </div>  </div>    <footer class="site-footer small--text-center" role="contentinfo">    <div class="wrapper">      <div class="characters grid--full">          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/danny" class="grid__image">              <img alt="Danny" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/danny-60cc2e6ea18be28c3cbd0853f1ae3f7d.gif" />              <img alt="Danny" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/danny-hover-b32a5ffe2a47b469c70e12a9e215e4aa.gif" />              <h6 class="title">Danny</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/mirai" class="grid__image">              <img alt="Mirai" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/mirai-9a0766836de2f1dc7f6a86a287387b03.gif" />              <img alt="Mirai" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/mirai-hover-a69a1d4a71a877d05bbe0c78232dadf3.gif" />              <h6 class="title">Mirai</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/kizuna" class="grid__image">              <img alt="Kizuna" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/kizuna-e93f8b5ef2e3faa9068234dfbb39983f.gif" />              <img alt="Kizuna" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/kizuna-hover-3916189b4b223b6701d70a589308bcd3.gif" />              <h6 class="title">Kizuna</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/chitose" class="grid__image">              <img alt="Chitose" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/chitose-de428e4379c48d7bb15784d3b1ca55f6.gif" />              <img alt="Chitose" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/chitose-hover-0e964f12e44c415d9a006324b542f4b2.gif" />              <h6 class="title">Chitose</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/ebony" class="grid__image">              <img alt="Ebony" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/ebony-781bc249bfc7fa0c2bd279f034e3a2d7.gif" />              <img alt="Ebony" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/ebony-hover-69f2c901082acca53ee6136baa9a0899.gif" />              <h6 class="title">Ebony</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/ivory" class="grid__image">              <img alt="Ivory" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/ivory-411b129efac09adf5e59e422aca084b3.gif" />              <img alt="Ivory" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/ivory-hover-5088edb529f09c497fa9e5d532708851.gif" />              <h6 class="title">Ivory</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/harmony" class="grid__image">              <img alt="Harmony" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/harmony-fb44a19d8d2a9c47cda1d74779ba79a2.gif" />              <img alt="Harmony" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/harmony-hover-26ae46931184e8b42905e490e6142d3e.gif" />              <h6 class="title">Harmony</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/haruka" class="grid__image">              <img alt="Haruka" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/haruka-213fb265104be97ee917c5cdcd882694.gif" />              <img alt="Haruka" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/haruka-hover-ca2d9573105f35487f9969f8fd04c966.gif" />              <h6 class="title">Haruka</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/kanata" class="grid__image">              <img alt="Kanata" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/kanata-cef6bb164d3663e0cac4bcf3c5e3c3ed.gif" />              <img alt="Kanata" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/kanata-hover-0e5dc9be3a4ceb70d5b5484285aac7ab.gif" />              <h6 class="title">Kanata</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/eiji" class="grid__image">              <img alt="Eiji" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/eiji-0f8aa35f4a3247d1e1230d5c92699738.gif" />              <img alt="Eiji" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/eiji-hover-b3e79f03700a47dd509ce480e1ae3b7b.gif" />              <h6 class="title">Eiji</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/crimson" class="grid__image">              <img alt="Crimson" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/crimson-b4e625416686bb0f54211ef6f901acff.gif" />              <img alt="Crimson" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/crimson-hover-7b85fd40662ec84bccea66e2b204d5de.gif" />              <h6 class="title">Crimson</h6></a>          </div>          <div class="grid__item large--one-sixth medium--one-quarter small--one-half">            <a href="/retrokyu" class="grid__image">              <img alt="Retrokyu" class="normal disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/retrokyu-875e1631b0cab6d55f13553378f62803.gif" />              <img alt="Retrokyu" class="hover disable-anti-aliasing" src="//images.dannychoo.com/media/mirai-dot/retrokyu-hover-e40be12f74d5953f9037b36e354cdbe5.gif" />              <h6 class="title">Retrokyu</h6></a>          </div>      </div>      <hr>      <div class="grid">              <div class="grid__item large--one-quarter medium--one-half">                <nav class="footer-nav">                  <h4>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h4>                  <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li> <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li> <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                   </ul>                </nav>              </div>              <div class="grid__item large--one-quarter medium--one-half">                <nav class="footer-nav">                  <h4>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h4>                  <ul>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li> <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                   </ul>                </nav>              </div>              <div class="grid__item large--one-quarter medium--one-half">                <nav class="footer-nav">                  <h4>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h4>                  <ul>                    <li>[hrefx][hrefx][hrefx]</li> <li>[hrefx][hrefx]</li> <li>[hrefx][hrefx]</li> <li>[hrefx][hrefx]</li>                   </ul>                </nav>              </div>        <div class="grid__item large--one-quarter medium--one-half">          <nav class="footer-nav">            <h4>Stay Connected</h4>            <ul class="inline-list social-icons">                <li>                  <a href="http://twitter.com/dannychoo" class="icon-fallback-text" target="_blank">                    <span class="icon icon-twitter" aria-hidden="true"></span>                    <span class="fallback-text">twitter</span></a>                </li>                <li>                  <a href="http://facebook.com/dannychoodotcom" class="icon-fallback-text" target="_blank">                    <span class="icon icon-facebook" aria-hidden="true"></span>                    <span class="fallback-text">facebook</span></a>                </li>                <li>                  <a href="http://instagram.com/dannychoo" class="icon-fallback-text" target="_blank">                    <span class="icon icon-instagram" aria-hidden="true"></span>                    <span class="fallback-text">instagram</span></a>                </li>                <li>                  <a href="http://www.pinterest.com/miraisuenaga" class="icon-fallback-text" target="_blank">                    <span class="icon icon-pinterest" aria-hidden="true"></span>                    <span class="fallback-text">pinterest</span></a>                </li>                <li>                  <a href="http://youtube.com/user/tokyostormtrooper" class="icon-fallback-text" target="_blank">                    <span class="icon icon-youtube" aria-hidden="true"></span>                    <span class="fallback-text">youtube</span></a>                </li>                <li>                  <a href="http://dannychoo.tumblr.com/" class="icon-fallback-text" target="_blank">                    <span class="icon icon-tumblr" aria-hidden="true"></span>                    <span class="fallback-text">tumblr</span></a>                </li>                <li>                  <a href="https://plus.google.com/+DannyChoo" class="icon-fallback-text" target="_blank">                    <span class="icon icon-google" aria-hidden="true"></span>                    <span class="fallback-text">google</span></a>                </li>                <li>                  <a href="http://feedly.com/index.html#subscription%2Ffeed%2Fhttp%3A%2F%2Fwww.dannychoo.com%2Frss%2Feng%2F" class="icon-fallback-text" target="_blank">                    <span class="icon icon-rss" aria-hidden="true"></span>                    <span class="fallback-text">rss</span></a>                </li>            </ul>          </nav>        </div>      </div>    </div>      <nav class="localize-nav text-center">          [hrefx][hrefx][hrefx][hrefx][hrefx]            <span class="separator">/</span>          [hrefx][hrefx][hrefx][hrefx][hrefx]      </nav>    <div class="copyright small sr-only">&copy; Mirai Inc 2017</div>  </footer></div><a name="bottom"></a><script src="//static.dannychoo.com/assets/application-198f1fcfbac3ea378352f275abc23f30.js" type="text/javascript"></script><!-- shop_scripts -->  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/jquery.sticky-anything.min.js?11795772257993313874" type="text/javascript"></script>  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/jquery.menu-aim.js?11795772257993313874" type="text/javascript"></script>  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/fastclick.min.js?11795772257993313874" type="text/javascript"></script>  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/timber.js?11795772257993313874" type="text/javascript"></script>  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/mirai.js?11795772257993313874" type="text/javascript"></script>  <script src="//cdn.shopify.com/s/files/1/0582/0997/t/6/assets/ajax-cart.js?11795772257993313874" type="text/javascript"></script><!-- //shop_scripts --><script type="text/javascript">  timber.RightDrawer = new timber.Drawers('SettingsDrawer', 'right', {    'onDrawerOpen': function () {      if (window.history.state !== 'cart-open') {        window.history.replaceState('cart-open', document.title);        window.history.pushState('cart-opened', document.title);      }    },    'onDrawerClose': function () {      if (window.history.state === 'cart-opened') {        window.history.back();      }      if (window.history.state === 'cart-open') {        window.history.replaceState(null, document.title);      }    }  });</script><script type="text/javascript">  MG.I18n.translations = {    "views.buttons.view_more": "更多","views.buttons.view_less": "隱藏","views.poll.questions.confirm_destroying": "你是否確定要刪除此投票？","views.images.edit.confirm_destroying": "您是否確定要刪除此圖片？","views.images.flickr.confirm_destroying": "您是否確定要刪除已上載至Flickr的圖片？","views.images.errors.maximum.title": "圖片達到上限","views.comments.report.confirmation": "您確定要舉報此評論？","views.posts.unsaved_changes": "您尚未保存，是否確定關閉此頁？","views.posts.confirm_destroying": "您是否確定要刪除此帖？","views.images.errors.maximum.content": "圖片數量已經達到 500 張的上限","activerecord.errors.models.post.attributes.images.maximum_reached": "500 圖像數量最高","views.menu.post.inline_edit_info": "帖子中可修改的內容已被提亮為黃色。點擊它們會彈出新的修改窗口。","views.posts.destroyed": "成功刪除。 <a href=\"/zh/posts/dashboard\">管理帖子<\/a>","views.products.confirm_destroying": "Are you sure you wish to delete this product?","views.products.destroyed": "Product deleted successfully.","views.menu.product.inline_edit_info": "Editable parts of the product are highlighted yellow. Clicking them will open an edit window.","views.products.unsaved_changes": "You have unsaved changes, are you sure you wish to close this form?","views.products.confirm_destroying": "Are you sure you wish to delete this product?"  }</script>    <script type="text/javascript">      $lazyImgs = $("img[data-original]");      $lazyImgs.lazyload({        effect: "fadeIn",        threshold: 3000      });      // After 30 seconds load all images      $(window).bind("load", function () {        var timeout = setTimeout(function () {          $lazyImgs.trigger("appear");        }, 30000);      });    </script>          <script type="text/javascript">    $(function() {      $(".comments").on("click", ".comment-submit", function(e) {        e.preventDefault();        window.location.href = $(this).data("url");      });    });  </script>  <script type="text/javascript">    $(function() {      $(".comments").on("click", ".comment-report a", function(e) {        window.location.href = $(this).data("url");      });    });  </script>    <script id="images-image-template" type="text/html">      <div class="post-image container-fluid">        <div class="row">          <div class="col-xs-12 col-sm-12 col-md-10 col-md-offset-1">            <div id="image_wrapper_{{image.id}}" class="image-wrapper" data-image_id="{{image.id}}" data-edit="{{image.url}}" style="max-width:{{image.original_width}}px;">              <div class="image" data-id="{{image.id}}" data-dimensions="{{image.original_width + 'x' + image.original_height}}" style="padding-top:{{image.original_height / image.original_width * 100}}%;">                <ul id="image-{{image.id}}" class="options">                  <li class="image-annotation-link">                    [hrefx]                  </li>                  <li class="image-annotation-show">將鼠標移到圖片上以查看附註或評論</li>                </ul>                <img src="{{image.original_url}}" class="main" style="position:absolute;width:100%;display:block;">              </div>              <div class="container-fluid">                <div class="row">                  <div class="col-xs-12 col-sm-12 col-md-10 col-md-offset-1">                    <div class="description">{{image.description_html || ""}}</div>                  </div>                </div>              </div>            </div>          </div>        </div>      </div>    </script>    <script id="poll-answer-template" type="text/html">      <li data-answer-id="{{id}}">        <label>{{content}}</label>        <div class="progress">          <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>          <span class="ratio">0%</span>        </div>      </li>    </script>    <script id="post-comment-form-template" type="text/html">  <form accept-charset="UTF-8" action="/zh/posts/27960/comments" class="simple_form comment-form" method="post" novalidate="novalidate"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="wGK8YIfRvzY4lrlFtUnDHynd3vmH1eGkUJYdFHZuO5E=" /></div>    <div class="comment-form clearfix">      <div class="comment-input control-group">        <textarea cols="66" id="comment_body" name="comment[body]" rows="6"></textarea>        <input id="comment_parent_id" name="comment[parent_id]" type="hidden" value="{{parent_id}}" />      </div>      <div class="form-actions">        <input class="btn btn-primary pull-right" data-loading-text="評論發佈中……" name="commit" type="submit" value="點擊評論" />        <button class="btn btn-default pull-left" data-action="cancel" name="button" type="submit">取消</button>      </div>    </div></form></script><script id="post-comment-entry-template" type="text/html">  <li id="comment-{{id}}" class="comment">    <div class="{{container_class}}">      <div class="comment-header">                {{# if (author_location) { }}          <span class="user-location small">{{author_location}}</span>        {{# } }}        <span class="published-at small">[hrefx][hrefx][hrefx][hrefx][hrefx]</span>      </div>      <div class="comment-sub-header">        <span class="user-registration small">{{author_registered}}</span>      </div>      <div class="comment-image-annotation"></div>      <div class="comment-body"></div>      <div class="comment-footer">        <span class="comment-reply">[hrefx][hrefx][hrefx][hrefx][hrefx]</span>      </div>    </div>    <ol class="nested-comments"></ol>  </li></script><script id="post-image-annotation-form-template" type="text/html">  <div class="image-annotate-edit-area">    <div class="image-annotate-edit-area-inner"></div>  </div>  <div class="image-annotate-comment-form">    <div class="image-annotate-edit-comment-body">      <textarea cols="30" rows="3" name="body"></textarea>    </div>    <button class="image-annotate-edit-ok btn btn-primary">OK</button>    <button class="image-annotate-edit-close btn">取消</button>      <div class="instructions">您的附註也將出現在以下評論中。</div>  </div></script><script id="post-image-annotation-template" type="text/html">  <div class="image-annotate-area" style="width:{{width}}px;height:{{height}}px;">    <a href="#comment-{{comment_id}}" class="image-annotate-area-inner"></a>  </div>  <div class="image-annotate-comment">    <div class="image-annotate-comment-inner" data-comment="{{comment_id}}">      <div class="image-annotate-user-username">        <div class="profile-info small">          <span class="profile-image"><img src="{{user.profile.avatar_url}}" alt="{{user.username}}" width="16" height="16"/></span>          <span class="profile-name">{{user.profile.name}}</span>        </div>      </div>      <div class="image-annotate-comment-body">{{comment.body}}</div>        <div class="instructions">點擊回覆/查看更多</div>    </div>  </div></script><script id="annotations-loading-template" type="text/html">  <div class="annotations-loading">    <div class="annotations-loading-inner">圖片附註加載中……</div>  </div></script><script id="annotation-error-template" type="text/html">    <div class="modal-dialog">      <div class="modal-content">        <div class="modal-header">          <a class="close" href="javascript:void(0)">×</a>          <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>          <p>以下錯誤導致您無法發佈附註。</p>        </div>        <div class="modal-body">          <ul>            {{# _.each(messages, function(message) { }}            <li>{{ message }}</li>            {{# }); }}          </ul>        </div>        <div class="modal-footer">          <a class="btn btn-primary ok" href="javascript:void(0)">OK</a>        </div>      </div>    </div></script><script type="text/javascript" charset="utf-8">  var default_avatars = ["//images.dannychoo.com/media/avatars/avatar_001-03a000d2cb60a824ad7e6a5abc8bc1da.jpg","//images.dannychoo.com/media/avatars/avatar_002-69af600cc446fe2418e92df74ef1083b.jpg","//images.dannychoo.com/media/avatars/avatar_003-d1b450e6c4f2ce40ea86ed7a20685b79.jpg","//images.dannychoo.com/media/avatars/avatar_004-8e4c31f90ff172358eca85b5967867e7.jpg","//images.dannychoo.com/media/avatars/avatar_005-e88a6aaa0ab2c84530122480228c7df6.jpg","//images.dannychoo.com/media/avatars/avatar_006-a514d23fcd8e470f0d0b23c4cf87d13b.jpg","//images.dannychoo.com/media/avatars/avatar_007-43de3b2177ad8bc224f4d1904e3cf4a8.jpg","//images.dannychoo.com/media/avatars/avatar_008-f12c254e79f1b643d7f1f8ce579afc96.jpg","//images.dannychoo.com/media/avatars/avatar_009-2e59b603c39a6bc667e9a39a9cd12cf4.jpg","//images.dannychoo.com/media/avatars/avatar_010-e0e472dede91c9ce72b03ca009a98ffb.jpg","//images.dannychoo.com/media/avatars/avatar_011-c8ac0376c9a89d7565f1f1d8fd56eacb.jpg","//images.dannychoo.com/media/avatars/avatar_012-e43c640d7949e7e142dae42190165654.jpg","//images.dannychoo.com/media/avatars/avatar_013-47c5b08634b6ef38430a102cb5c05e25.jpg","//images.dannychoo.com/media/avatars/avatar_014-c6dbd8dcc1cce19cb770e4afc1166dbf.jpg","//images.dannychoo.com/media/avatars/avatar_015-4acc28497a16801dd80fa1fabc814882.jpg","//images.dannychoo.com/media/avatars/avatar_016-0218b6033a5a2e97012c792cec06ac99.jpg","//images.dannychoo.com/media/avatars/avatar_017-cd9800cbf6e6a50dbb83df4f664cad67.jpg","//images.dannychoo.com/media/avatars/avatar_018-1808a175da61b5987524b093ea4d46a8.jpg","//images.dannychoo.com/media/avatars/avatar_019-6bbe651573110075866e146cf33a9f4e.jpg","//images.dannychoo.com/media/avatars/avatar_020-1e2a4452ae4b26bfb0e03887e2635f6d.jpg","//images.dannychoo.com/media/avatars/avatar_021-0fde5656e12de452cf44e3e4a407f675.jpg","//images.dannychoo.com/media/avatars/avatar_022-a0d561d88fc5f8328b0000e7f9302e5c.jpg","//images.dannychoo.com/media/avatars/avatar_023-09fb3b043610399235e7d3729b204478.jpg","//images.dannychoo.com/media/avatars/avatar_024-3f4f253975dbf50cd618ece14cc29286.jpg","//images.dannychoo.com/media/avatars/avatar_025-144fa015d117b26ad9d3019355c1cf23.jpg","//images.dannychoo.com/media/avatars/avatar_026-eeffc182fc9778af212cf5824057f8ff.jpg","//images.dannychoo.com/media/avatars/avatar_027-7debc7dbf0465c7fd5f2217723d93715.jpg","//images.dannychoo.com/media/avatars/avatar_028-ccce5977599941d6b622f722c0ae2656.jpg","//images.dannychoo.com/media/avatars/avatar_029-b420caabdab4ac9ed3c057f4d88a3926.jpg","//images.dannychoo.com/media/avatars/avatar_030-50d454427cc267aa7b81123e1bf6e994.jpg","//images.dannychoo.com/media/avatars/avatar_031-75da66fba64f2acd4168c1ebc8a08b96.jpg"];</script><script type="text/javascript" charset="utf-8">  var activerecord_errors_models_image_annotation_bounds = "附註必須在圖像上方",      activerecord_errors_models_image_annotation_too_wide = "附註範圍太寬，請選擇圖像內的範圍",      activerecord_errors_models_image_annotation_too_tall = "附註範圍太高，請選擇圖像內的範圍";</script><script type="text/html" charset="utf-8" id="modal-loading-template">  <div class="modal fade model-loading" tabindex="-1" role="dialog">    <div class="modal-dialog">        <div class="modal-content">        <div class="modal-header">          <button type="button" class="close" data-dismiss="modal" aria-label="Close">            <span aria-hidden="true">&times;</span></button>          <h4 class="modal-title">加載中……</h4>        </div>        <div class="modal-body">          <img alt="Loading-pulse" src="//static.dannychoo.com/assets/base/loading-pulse-045597c93c2f909e49b330fab0c1346e.gif" />        </div>      </div>    </div>  </div></script><script type="text/html" charset="utf-8" id="modal-saving-template">  <div class="modal fade modal-saving">    <div class="modal-dialog">      <div class="modal-content">        <div class="modal-header">          <button type="button" class="close" data-dismiss="modal" aria-label="Close">            <span aria-hidden="true">&times;</span></button>          <h4 class="modal-title">保存中……</h4>        </div>        <div class="modal-body">          <img alt="Loading-pulse" src="//static.dannychoo.com/assets/base/loading-pulse-045597c93c2f909e49b330fab0c1346e.gif" />        </div>      </div>    </div>  </div></script><script type="text/html" charset="utf-8" id="modal-delete-template">  <div class="modal fade modal-delete">    <div class="modal-dialog">      <div class="modal-content">        <div class="modal-header">          <button type="button" class="close" data-dismiss="modal" aria-label="Close">            <span aria-hidden="true">&times;</span></button>          <h4 class="modal-title">刪除</h4>        </div>        <div class="modal-body">          {{ msg }}        </div>        <div class="modal-footer">          <button type="button" class="cancel btn btn-default" data-dismiss="modal">取消</button>          <button type="button" class="delete btn btn-primary pull-right">刪除</button>        </div>      </div>    </div>  </div></script><script type="text/html" charset="utf-8" id="modal-deleting-template">  <div class="modal fade modal-deleting">    <div class="modal-dialog">      <div class="modal-content">        <div class="modal-header">          <button type="button" class="close" data-dismiss="modal" aria-label="Close">            <span aria-hidden="true">&times;</span></button>          <h4 class="modal-title">刪除中……</h4>        </div>        <div class="modal-body">          <img alt="Loading-pulse" src="//static.dannychoo.com/assets/base/loading-pulse-045597c93c2f909e49b330fab0c1346e.gif" />        </div>      </div>    </div>  </div></script><script type="text/html" charset="utf-8" id="flash-template">  <div class="alert alert-{{type}} {{ dismissable ? 'alert-dismissable' : ''}} fade in" role="alert">      {{# if (dismissable) { }}        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>      {{# } }}      {{# if (heading) { }}        <h4 class="alert-heading">{{heading}}</h4>      {{# } }}      <span class="alert-body"></span>  </div></script><script type="text/javascript">var sc_project=498578; var sc_invisible=1; var sc_security=""; </script><script type="text/javascript"src="http://www.statcounter.com/counter/counter.js"></script><noscript><div class="statcounter"><a title="web analytics"href="http://statcounter.com/" target="_blank"><imgclass="statcounter"src="http://c.statcounter.com/498578/0//1/" alt="webanalytics"></a></div></noscript><script type="text/javascript">  (function() {    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;    po.src = 'https://apis.google.com/js/plusone.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);  })();</script><script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">try {var pageTracker = _gat._getTracker("UA-2827384-1");pageTracker._trackPageview();} catch(err) {}</script></body><!-- Emoji image icons provided by the Twemoji project (https://github.com/twitter/twemoji/) licensed under CC-BY 4.0: https://creativecommons.org/licenses/by/4.0/ --></html>