<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"> <head>   <meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>   <meta name="description" content="[metatags_description]" />   <meta name="keywords" content="[metatags_keywords] " />   <meta name="format-detection" content=" [metatags_description] " />   <meta name="TopTitle" content="[metatags_title] " />   <meta http-equiv="X-UA-Compatible" content="IE=edge" />   <title>[metatags_title]</title>  </head>  <body>   <div style="position:relative">    <link href="css/common.css" rel="stylesheet" type="text/css" media="all" />    <link href="css/normal.css" rel="stylesheet" type="text/css" media="all" />    <link href="css/tablet.css" rel="stylesheet" type="text/css" media="all" />    <link href="css/small.css" rel="stylesheet" type="text/css" media="all" />    <link href="tumblr/tumblr.css" rel="stylesheet" type="text/css" media="all" />    <link rel="stylesheet" href="css/responsiveslides.css" type="text/css" media="screen" />    <link rel="stylesheet" href="fancybox/source/jquery.fancybox.css" type="text/css" media="screen" />    <link href="http://www.valuegolf.co.jp/hp_script/sp_show.css" rel="stylesheet" type="text/css" media="all" />    <div id="container">     <!-- header -->     <header>      <div id="header" class="cf">       <div id="header_box">        <div class="sub_menu sm_hide">         <ul>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>        </div>       </div>       <div class="tel_fax">        [hrefx]       </div>       <div class="logo">        [hrefx]       </div>       <p class="a_center f14 c_red02 pc_hide tablet_hide">[metatags_title] </p>      </div>     </header>     <nav>      <div id="nav cf">       <ul class="navi cf">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li class="pc_hide tablet_hide">[hrefx]</li>       </ul>      </div>     </nav>     <div class=" b_grey01 p_top10">      <div id="top_photo">       <div class="top_photo">        [hrefx]        <a href="https://www.cheapjerseys-nfl.com/" target="_blank">cheap jerseys</a>       </div>       <div class="top_photo">        [hrefx] [hrefx]        <a href="http://www.authenticcheapjerseyschina.com/" target="_blank">cheap jerseys</a>       </div>       <div class="top_photo">        [hrefx]        <br />        <a href="http://www.elitecheapnfljerseysauthentic.com/" target="_blank">cheap jerseys</a>       </div>       <div class="top_photo">        [hrefx]        <a href="https://www.cheap-nfl-jerseys-shop.com/" target="_blank">cheap jerseys</a>       </div>      </div>     </div>     <div class="contents_box">      <div class="contents cf end">       <div class="cf">        <!-- info -->        <section>         <div class=" c_box_b c_box_01">          <h1 class="cf">[metatags_keywords]<span>[metatags_title] </span></h1>          <div class="news bd_bottom01">           <div style="font-size:10px; text-align:center; ">            [hrefx]            <!--Please display the above link in your web page according to Terms of Service.-->           </div>           <!-- end feedwind code -->           <!--ブログ更新リストここまで -->          </div>         </div>        </section>        <!-- info -->        <!-- info -->        <section>         <div class=" c_box_b c_box_02">          <h1 class="cf m_top15">[metatags_title]<span>[metatags_keywords] </span></h1>          <div class="news">           <ul>            <li class="cf"><span class="day">[2017/06/26]</span><span class=" c_red01">NEW!</span><br /> ダイナックメニューが新しくなりました！<br /> [hrefx]</li>            <li class="cf"><span class="day">[2017/06/23]</span><span class=" c_red01">NEW!</span><br /> 湖畔亭のメニューが新しくなりました！<br /> [hrefx]</li>            <!--                <li class="cf"><span class="day">[2016/10/03]</span>12月までのシニア・レディース優待料金を掲載しました！<br>                  <a href="fee.html#sl_plan">料金表はこちら⇒</a></li>-->           </ul>          </div> [hrefx]         </div>        </section>       </div>      </div>     </div>     <!-- contents -->    </div>    <!-- /container -->    <div id="pagetopComp" class="sm_hide">     <p>[hrefx]</p>    </div>    <!-- footer -->    <footer>     <div id="footer">      <div id="group_box">       <div class="box">        <div class="title">         [metatags_description]        </div>        <div class="group_list">         <ul>          <li><a href="http://lake-wood.co.jp/lakewood/" target="_blank">[metatags_keywords]<b style="color:black;background-color:#ffff66">[metatags_title]</b></a><br /> [hrefx]</li>          <li>[hrefx]<br /> [hrefx]</li>          <li>[hrefx][hrefx]<br /> [hrefx]</li>         </ul>        </div>       </div>      </div>      <div class="f_menu">       [hrefx] [hrefx] [hrefx] [hrefx] [hrefx] [hrefx] [hrefx] [hrefx] [hrefx]       <li><a href="http://www.cheapjerseys11.com/" target="_blank">cheap jerseys</a></li>      </div>      <div class="c_info">       <div class="c_name">        [metatags_keywords]        <b style="color:black;background-color:#ffff66">[metatags_description]</b>       </div>       <div class="c_address">        [hrefx]        <li><a href="http://www.cheapjerseys11.com/" target="_blank">cheap jerseys</a></li>       </div>      </div>     </div>    </footer>    <!-- footer -->    <!-- pcache201.search.ogk.yahoo.co.jp Wed Jul  5 11:19:22 JST 2017 -->    <noscript>     <div style="position:absolute;">      <img width="1" height="1" alt="" src="http://b5.yahoo.co.jp/b?P=LGexNjEyNy75bWYqVGv61MjnMjE5LgAAAACg2Cs3&amp;T=14g58qbgq%2fX%3d1499221162%2fE%3d2077630581%2fR%3djp_ws%2fK%3d5%2fV%3d3.1%2fW%3dJ%2fY%3djp%2fF%3d406628870%2fH%3dYWRjdmVyPTYuOC4w%2fQ%3d-1%2fS%3d1%2fJ%3d595C4CAA" />     </div>    </noscript>   </div>   </body></html>