<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="[语言]" lang="ja" xmlns:og="http://ogp.me/ns#"xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:mixi="http://mixi-platform.com/ns#" xmlns:fb="http://ogp.me/ns/fb#" ><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>[metatags_title]</title><meta name="Keywords" content ="[metatags_keywords]" /><meta name="description" content ="[metatags_description]" /><meta property="og:title"     content="fotochan" /><meta property="og:type"      content="website" /><meta property="og:url"       content="http://foto.chan.to/N/photo/35662/" /><meta property="og:image"     content="http://foto.chan.to/image/4_90334578594d7cfb6d146_cor_scn.jpg"/><meta property="og:site_name" content="fotochan" /><meta property="og:description" content="" /><meta property="fb:admins" content="100001742793620" /><meta property="fb:app_id"    content="183087301743010" /><link rel="stylesheet" type="text/css" href="/css/reset.css" /><link rel="stylesheet" type="text/css" href="/css/basic.css" /><link rel="stylesheet" type="text/css" href="/css/style2.css" /><link rel="stylesheet" type="text/css" href="/css/tooltipster.css" /><style type="text/css">.popup img{display:none;background-color:black;position:absolute;top:0px;left:0px;z-index:300;}#syori {	display: none;    background-color:black;    position:absolute;    z-index:500;}#syori-background {	color:white;	font-size:12pt;	position:absolute;	text-align:center;    width:500px;}</style><script type="text/javascript">  var _gaq = _gaq || [];  _gaq.push(['_setAccount', 'UA-21205017-1']);  _gaq.push(['_trackPageview']);  (function() {    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);  })();</script></head><script type="text/javascript" charset="utf-8" src="/js/jquery.gz"></script><script type="text/javascript" src="/js/jquery.tooltipster.min.gz"></script><script type="text/javascript"><!--		$(document).ready(function() {			$('.tooltip').tooltipster({			arrowColor: '',				// ▼部分の色			delay: 100, 				// マウスを乗せてから表示するまでの待ち時間			fixedWidth: 150,				// 幅			offsetY: -10,					// 位置			position: 'bottom', 			// 場所			});		});function change_tab_b_color(no) {    if( no == 1 ){       	$("#tab_b").removeClass("off").addClass("on");    	$("#tab_a").removeClass("on").addClass("off");    }    else{    	$("#tab_b").removeClass("on").addClass("off");    	$("#tab_a").removeClass("off").addClass("on");    }}   	function doPost(){//    $("img").show().fadeTo(0.0, 0.8);//    $("img").show().fadeTo("slow", 0.8);showProcessing();}function showProcessing() {	$("#syori").show()                    .fadeTo(0,0)                    .fadeTo("slow",0.8);                    	$("#syori").css("width",$(window).width())                    .css("height",$(window).height())                    .css("top",$(window).scrollTop())                    .css("left",$(window).scrollLeft());    $("#syori-background")                    .css("top" ,($(window).height() - $("#syori-background").height()) / 2)    	            .css("left",($(window).width() - $("#syori-background").width()) / 2);}function InputCheckDisp(){	// 「OK」時の処理開始 ＋ 確認ダイアログの表示	if(window.confirm('公開しますか？')){	}	// 「キャンセル」時の処理開始　	else{		return false;	}}function DeleteCheckDisp(){	// 「OK」時の処理開始 ＋ 確認ダイアログの表示	if(window.confirm('削除しますか？')){	}	// 「キャンセル」時の処理開始　	else{		return false;	}}//--></script><script type="text/javascript"><!--//--></script><body><div id="syori"> 	<div id="syori-background">       	<img src="/js/progress.gif"/>       	<br>       	fotochan Processing....    </div></div><div class="popup"><img src="/js/syori.gif"/></div>	 <p class="catchphrase">Super Easy Photo Correction Before After alpha version</p><div id="header">	<div id="description">		<h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>		<p id="siteInfo">		    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]		</p>				<!--<p id="total"><em>Total36253Photos became clear and good-looking.</em></p>-->		<p id="total"><em>40000photos clear</em></p>	</div>	<div id="pr_top"><!-- 20110922 comment out start -->        <!-- <script type="text/javascript"> --> <!--//        google_ad_client = "pub-0885625580289468";        /* 468x60, 作成済み 11/02/03 photo@pedia *///        google_ad_slot = "5901243885";//        google_ad_width = 468;//        google_ad_height = 60;//        //-->        <!-- </script> -->        <!-- <script type="text/javascript"//        src="http://pagead2.googlesyndication.com/pagead/show_ads.js">        </script>	--><!--		<img src="/banner_img.jpg" alt="prSample" />   --><!-- 20110922 comment out end -->	</div>	<div id="toolIcon">    	    <!-- ツイットボタン -->    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>    <!-- Tumblr -->    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    <!-- mixiチェックボタン -->    <a href="http://mixi.jp/share.pl" class="mixi-check-button" data-key="289af0e03af1aeb2e925068feca3d6cdeb1a53b3" data-button ="button-1" >mixiチェック</a>    <!-- ソーシャルブックマーク -->    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<script type="text/javascript" src="http://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script> 	<fb:like href="https://www.facebook.com/pages/fotochan/361256583952839" send="false" width="450" show_faces="false"></fb:like>    <!-- 次のタグを +1 ボタンを表示する箇所に貼り付けてください -->    <!--    <g:plusone size="medium"></g:plusone>    -->    <div class="g-plusone" data-size="medium" data-annotation="inline" data-width="120"></div>		</div></div><!--END #header--><div id="base">  <div id="wrap">    <div id="contents">[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]        <ul class="gmenu">          <li><a href=http://foto.chan.to/1/  class="pets">animal/pet</a></li>          <li><a href=http://foto.chan.to/2/ class="dishes">food</a></li>          <li><a href=http://foto.chan.to/3/  class="goods">goods</a></li>          <li><a href=http://foto.chan.to/4/  class="water">water</a></li>          <li><a href=http://foto.chan.to/5/  class="plant">flower/plant</a></li>               <li><a href=http://foto.chan.to/0/ class="almt">other</a></li>             </ul>      </div>            <div class="side_box" id="MenuPhotoView">        <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>              <img src = "/img/gmenuPhotoView_en.png" >   	   	<ul class="gmenu"  >          <li><a href=http://foto.chan.to/pet/gallery/1/  class="pets">animal/pet</a></li>          <li><a href=http://foto.chan.to/food/gallery/1/ class="dishes">food</a></li>          <li><a href=http://foto.chan.to/goods/gallery/1/  class="goods">goods</a></li>          <li><a href=http://foto.chan.to/water/gallery/1/  class="water">water</a></li>          <li><a href=http://foto.chan.to/plant/gallery/1/  class="plant">flower/plant</a></li>                      <li><a href=http://foto.chan.to/almt/gallery/1/ class="almt">other</a></li>                    </ul>      </div>      	  <div class="pr_left"><!-- 20110922 comment out start -->        <!-- <script type="text/javascript"> --> <!--//        google_ad_client = "pub-0885625580289468";        /* 120x240, 作成済み 11/02/04 photo@pedia *///        google_ad_slot = "1245470527";//        google_ad_width = 120;//        google_ad_height = 240;        //-->        <!-- </script>        <script type="text/javascript"        src="http://pagead2.googlesyndication.com/pagead/show_ads.js">        </script> --><!-- 20110922 comment out end --><!--		<img src="/125x125.gif" alt="sample" /> --><!--		<img src="/125x125.gif" alt="sample" /> -->	  </div>	       </div><!--END #side-->      <div id="c_pad">		<ul id="pan">			<li class="top"><a href=http://foto.chan.to>HOME</a></li>		</ul>        <div id="result">         	<p> </p>       			<div class="box_gal">				<ul>	        		<li class="off" id="tab_b" ><a  onClick="img01.src='http://foto.chan.to/image/4_90334578594d7cfb6d146_org_scn.jpg', change_tab_b_color(1)" >Before</a></li>	        		<li class="on"  id="tab_a" ><a onClick="img01.src='http://foto.chan.to/image/4_90334578594d7cfb6d146_cor_scn.jpg', change_tab_b_color(0)" >After</a></li>	        	</ul>				<img src=http://foto.chan.to/image/4_90334578594d7cfb6d146_cor_scn.jpg name="img01"  class="photo" alt = "fotochan"><dl><dd class="date">2017-06-24 05:41:41</dd><dd class="access" ><em id="access"></em>access</dd></dl>        <!-- ツイットボタン -->        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>        <!-- Tumblrボタン -->        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        <!-- mixiチェックボタン --><!--削除2012.3.24        <a href="http://mixi.jp/share.pl" class="mixi-check-button" data-key="289af0e03af1aeb2e925068feca3d6cdeb1a53b3" data-button ="button-1" >mixiチェック</a>        <script type="text/javascript" src="http://static.mixi.jp/js/share.js"></script>-->        <!-- pinterestチェックボタン -->        <a href="http://pinterest.com/pin/create/button/?url=http%3A%2F%2Ffoto.chan.to%2FN%2Fphoto%2F35662%2F&media=http%3A%2F%2Ffoto.chan.to%2Fimage%2F4_90334578594d7cfb6d146_cor_scn.jpg&description=" class="pin-it-button" count-layout="horizontal">        <img border="0" src="//assets.pinterest.com/images/PinExt.png" title="Pin It" /></a>        <!-- ソーシャルブックマーク -->        <!--        [hrefx]<script type="text/javascript" src="http://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script>        -->        <!-- google+1ボタン -->        <!-- 次のタグを head 要素内または bod -->        <!-- <script type="text/javascript" src="h {lang: 'ja'}  </script> -->         <!-- <script src="http://connect.facebook.net/ja_JP/all.js#xfbml=1"></script><fb:send href=http://foto.chan.to/N/photo/35662/ font="arial"></fb:send> -->        <!-- 次のタグを +1 ボタンを表示する箇        -->        <!-- <g:plusone size="medium"></g:plusone> -->            <!-- facebookいいねボタン -->        <!--        <iframe src="http://www.facebook.com/plugins/like.php?href=http://foto.chan.to/N/photo/35662/&amp;layout=button_count&amp;show_faces=true&amp;width=50&amp;action=like&amp;font&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:130px; height:21px;" allowTransparency="true"></iframe>        -->            <!--            <iframe src="http://www.facebook.com/plugins/like.php?href=http://foto.chan.to/N/photo/35662/&amp;send=false&amp;layout=button_count&amp;width=120&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=20" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:120px; height:20px;" allowTransparency="true"></iframe>        -->        <!--   		<div class="fb-like" data-href=foto.chan.to/N/photo/35662/ data-send="false" data-layout="button_count" data-width="120" data-show-faces="false" data-action="recommend"></div>        -->		<!-- <fb:like href=http://foto.chan.to/N/photo/35662/ send="false" layout="button_count" width="120" show_faces="false"></fb:like> -->        <iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffoto.chan.to/N/photo/35662/&amp;send=false&amp;layout=standard&amp;width=200&amp;show_faces=false&amp;font&amp;colorscheme=light&amp;action=recommend&amp;height=35&amp;appId=553627134650966" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:200px; height:35px;" allowTransparency="true"></iframe>        <!--							<dl>					<dt></dt>					<dd class="date">2017-06-24 05:41:41</dd>					<dd class="access"><em>22</em>access</dd>					<dd class="comment"></dd>				</dl>-->				<dl><dt><em>Photo URL:http://foto.chan.to/N/photo/35662/</em></dt></dl><form action="" method="POST" enctype="multipart/form-data"><dl class="input"><dt>You can comment with Twitter Login.</dt><input type="submit" name ="submit_comment" class="inputPartBtn" value="login on Twitter"></dl></form><fb:comments href=http://foto.chan.to/N/photo/35662/ num_posts="10"></fb:comments>			<form action="" method="POST" enctype="multipart/form-data">	        <input type="submit" name ="delete" class="inputPartBtn" value=delete request>            </form>				    			</div>		        </div>					    	<hr clear="all" />	 </div><!--END #c_pad-->      <!--メインメニュー--><!--フッター-->    </div><!--END #contents-->  </div><!--END #wrap--></div><!--END #base--><div id="f_menu">	<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>	<ul>		<li><a href="http://foto.chan.to/agreement.php"></a></li>		<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	</ul></div><address>	Copyright (C) fotochan All Rights Reserved.</address></body><div id="fb-root"></div><script>(function(d, s, id) {  var js, fjs = d.getElementsByTagName(s)[0];  if (d.getElementById(id)) return;  js = d.createElement(s); js.id = id;  js.src = "//connect.facebook.net/ja_JP/all.js#xfbml=1&appId=183087301743010";  fjs.parentNode.insertBefore(js, fjs);}(document, 'script', 'facebook-jssdk'));</script><!-- ツイットスクロール -->    <script type="text/javascript" src="http://static.mixi.jp/js/share.js"></script><script type="text/javascript">window.___gcfg = {lang: 'ja'};(function() {    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;    po.src = 'https://apis.google.com/js/plusone.js';	var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);})();</script><!-- twitter follow badge by go2web20 --><!-- <script src='http://www.go2web20.net/twitterfollowbadge/1.0/badge.js' type='text/javascript'></script> --><script type='text/javascript' charset='utf-8'><!--//tfb.account = 'fotochan';//tfb.label = 'follow-me';//tfb.color = '#463800';//tfb.side = 'r';//tfb.top = 35;//tfb.showbadge();--></script><!-- end of twitter follow badge --><script type="text/javascript" src="//assets.pinterest.com/js/pinit.js"></script>    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>        <script type="text/javascript">        $(document).ready(function() {                $.ajax( {                    url: '/ajax/ImageViewCounter.php?image_no=35662',                    dataType : 'json',                    success: function( data ) {                        var message = jsonParser(data);                        $( '#access' ).append( message );                    },                    error: function( data ) {                        $( '#access' ).append( '0' );                    }                } );        } );     /*    * JSONデータをパースする関数です。    */    function jsonParser(data) {        var message = data.access;        return message;    }    </script></html>