<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><html lang="jp"><head>    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />     <meta http-equiv="X-UA-Compatible" content="IE=edge">        <meta name="description" content="[metatags_description]"><meta name="keywords" content="[metatags_keywords]"><meta name="format-detection" content="telephone=no"><meta name="apple-mobile-web-app-title" content="au Webﾎﾟｰﾀﾙ"><meta property="og:title" content="[metatags_title]"><meta property="og:site_name" content="au Webポータル｜最新のニュースをお届け！"><meta property="og:image" content="https://portal.st-img.jp/assets/img/article_ogp.jpg?cc=1501130048"><meta property="og:description" content="[metatags_description]"><meta property="og:url" content="https://article.auone.jp/detail/1/2/3/5_3_r_20170729_1501306231874872"><meta property="og:type" content="article"><title>[metatags_title]</title>            <link rel="shortcut icon" href="https://portal.st-img.jp/assets/img/favicon.png?cc=1501130048">        <link rel="apple-touch-icon-precomposed" href="https://portal.st-img.jp/assets/img/favicon.png?cc=1501130048">        <link rel="stylesheet" href="https://portal.st-img.jp/assets/css/pc.css?cc=1501130048">        <!--[if IE 9]>        <link rel="stylesheet" href="https://portal.st-img.jp/assets/css/ex_ie9.css?cc=1501130048">        <![endif]-->        <script src="https://portal.st-img.jp/assets/js/style_pc.js?cc=1501130048"></script>    </head><body class="base__bg">                    <noscript>JavaScriptをオンにしてお楽しみください。</noscript>                <div class="wrapper__contents">                                        <header class="header">	<div class="header__cover">        <div class="header__arrow">            [hrefx]        </div>        <div class="header__text">            <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>        </div>    </div></header>                        <div class="main">                                    <article class="js-container container">        <div class="article__container">            <div class="headline">                <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex]</h1>            </div>            <aside class="js-sns--small sns--small">    <div class="sns__frame">        <ul class="sns__items">                        <li class="sns-facebook">                [hrefx]            </li>                                    <li class="sns-twitter">                [hrefx]            </li>                                    <li class="sns-line">                [hrefx]            </li>                                    <li class="sns-hatena">                [hrefx]            </li>                                    <li class="sns-pocket">                [hrefx]            </li>                    </ul>    </div>    <p class="js-sns--small__button sns--small__button">あとで読む</p></aside>            <div class="article">              <figure class="js-article__photo-wrapper article__photo-wrapper">  [hrefx]  <figcaption>    <p class="article__caption">      ＮＳＣを終え、報道各社の質問に答える安倍晋三首相＝２９日午後、首相官邸      <span class="article__credit"></span>    </p>  </figcaption></figure><div class="article__body">　安倍晋三首相は２９日午後、北朝鮮による大陸間弾道ミサイル（ＩＣＢＭ）の発射について、「国際社会の安全に対する重大かつ現実の脅威だ」と非難した。その上で「日米韓の強い結束の下、国際社会と緊密に連携していく」として、北朝鮮への圧力を強めていく考えを強調した。さらなる挑発行為に備え、高度な警戒態勢を維持し、国民の安全確保に万全を期す方針も示した。　</div>            </div>            <div class="article__info">                <div class="article__subtext">                    <p class="article__lastupdate">07/29 14:23</p>                    <p class="article__service-name">時事通信社</p>                </div>                <div>                                                        </div>            </div>            <aside class="sns--large">    <ul class="sns__items">                <li class="sns-facebook">            [hrefx]        </li>                        <li class="sns-twitter">            [hrefx]        </li>                        <li class="sns-line">            [hrefx]        </li>                        <li class="sns-hatena">            [hrefx]        </li>                        <li class="sns-pocket">            [hrefx]        </li>            </ul></aside>        </div>                <section class="related__contents">        <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>        <ul class="related__items">                                                                                        <li class="related-news__item">                                                [hrefx][hrefx][hrefx][hrefx]                    </li>                                                                                                        <li class="related-news__item">                                                [hrefx]                    </li>                                                                                                        <li class="related-news__item">                                                [hrefx]                    </li>                                                                                                        <li class="related-news__item">                                                [hrefx]                    </li>                                                                                                        <li class="related-news__item">                                                [hrefx][hrefx][hrefx][hrefx]                    </li>                                    </ul>    </section>        <div class="button">            [hrefx]        </div>        <section class="rectangle__contents">    <div class="rectangle-ad js-rectangle-ad-left"></div>    <div class="rectangle-ad js-rectangle-ad-right"></div></section>    </article>                                                    <div class="side__container">    <div class="side__ad-box js-side__ad-box"></div>        <nav class="sidemenu">                <div class="sidemenu__service">            <dl>                <dt class="sidemenu__title">メニュー</dt>                                <dd class="sidemenu__body">                    <ul>                        <li class="sidemenu__category">                            [hrefx]                        </li>                        <li class="sidemenu__category">                            [hrefx]                        </li>                        <li class="sidemenu__category">                            [hrefx]                            <ul class="sidemenu__items">                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                            </ul>                        </li>                        <li class="sidemenu__category">                            [hrefx]                            <ul class="js-sidemenu__items sidemenu__items">                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx][hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                            </ul>                        </li>                        <li class="sidemenu__category">                            <p>                                <i class="sidemenu__sprite sidemenu__sprite--service"></i>                                auサービス                            </p>                            <ul class="js-sidemenu__items sidemenu__items">                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx][hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx][hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx][hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx]                                </li>                            </ul>                        </li>                        <li class="sidemenu__category">                            [hrefx]                            <ul class="js-sidemenu__items sidemenu__items">                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx][hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                            </ul>                        </li>                        <li class="sidemenu__category">                            [hrefx]                            <ul class="js-sidemenu__items sidemenu__items">                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                  [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx][hrefx]                                </li>                            </ul>                        </li>                        <li class="sidemenu__category">                            <p>                                <i class="sidemenu__sprite sidemenu__sprite--config"></i>                                各種設定・その他                            </p>                            <ul class="js-sidemenu__items sidemenu__items">                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx]                                </li>                                <li class="sidemenu__item">                                    [hrefx][hrefx][hrefx][hrefx]                                </li>                            </ul>                        </li>                    </ul>                </dd>                            </dl>        </div>            </nav>    </div>                            </div>                                        <footer class="footer">    <div class="js-footer__to-top footer__to-top">[hrefx]</div>    <div class="footer__copyright">        <small>©KDDI/©mediba</small>    </div></footer>                    </div>                <script defer src="https://portal.st-img.jp/assets/js/app_pc.js?cc=1501130048"></script>                    <script>        window.global = {             apiVersion: "v2"            ,cookieList: {"P_FOLLOW_KEYLIST":{"domain":".auone.jp","path":"/","expire":1816671097,"secure":true},"ozid":{"domain":".auone.jp","path":"/","expire":1816671097},"ANMW":{"domain":".auone.jp","path":"/","expire":1816671097},"ANFT":{"domain":".auone.jp","path":"/","expire":1816671097},"ANMW_PC":{"domain":".auone.jp","path":"/","expire":1816671097},"ANFT_PC":{"domain":".auone.jp","path":"/","expire":1816671097}}            ,millisecond: 1501311097132            ,cacheBlock: 3            ,webtop_url: "https://auone.jp/"            ,theme: "pc"        };    </script>                <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-MP7TC7"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-MP7TC7');</script><script>    var ss_analytics = {        serviceName : 'medibanews',        platform : 'sp_web'    };    </script><noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-WT9H4G"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-WT9H4G');</script>    </body></html>