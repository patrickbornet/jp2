<!DOCTYPE HTML><html lang="jp">			<head>	<meta http-equiv="content-type" content="text/html; charset=UTF-8">	<meta http-equiv="X-UA-Compatible" content="IE=edge">	<meta name="viewport" content="width=device-width, initial-scale=1">				    	    <script type="text/javascript" src="http://www.centurylink.com/etc/clientlibs/granite/jquery.min.js"></script><script type="text/javascript" src="http://www.centurylink.com/etc/clientlibs/granite/utils.min.js"></script><script type="text/javascript" src="http://www.centurylink.com/etc/clientlibs/granite/jquery/granite.min.js"></script><script type="text/javascript" src="http://www.centurylink.com/etc/clientlibs/foundation/jquery.min.js"></script>		<link rel="icon" type="image/vnd.microsoft.icon" href="http://www.centurylink.com/etc/designs/ewcmbiz/favicon.ico">	<link rel="shortcut icon" type="image/vnd.microsoft.icon" href="http://www.centurylink.com/etc/designs/ewcmbiz/favicon.ico">    	<!--[if lt IE 9]>	<script src="//oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>	<script src="//oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>	<![endif]-->    <!--/*  Marketo Javascript */ -->    <script src="http://www.centurylink.co.jp/sdapp-abb/dmarketo/js/forms2/js/forms2.min.js"></script>     	    			<!-- Adobe "Medium Business / Enterprise" Production Initialization -->			<script src="http://assets.adobedtm.com/e2f8cd116ff52c784c699a7031ef84a705ee0e03/satelliteLib-4bab4c68af83c4b28e33844a0a6cf1911f0bfafc.js"></script>			    				    <script type="text/javascript">		        if (typeof _satellite !== "undefined") {		            _satellite.track("AEM page");		            _satellite.setVar("AEM","true");		        }		    </script>			     				<title>[metatags_title]</title>	<meta name="description">	<meta name="robots" content="INDEX,FOLLOW">    <meta name="tags">			    <link rel="canonical" href="http://www.centurylink.co.jp/it-security/it-risk-mitigation.html"/>	    <script src="http://www.centurylink.com/etc/designs/ewcmbiz/mpcodejs/mp_linkcode.js"></script>        <!-- mp_snippet_begins -->	<script>	MP.UrlLang = 'ja';	MP.SrcUrl = decodeURIComponent('http%3A%2F%2Fwww.centurylink.com%2Fbusiness%2Fenterprise%2Fit-security%2Fit-risk-mitigation.html');	MP.oSite = decodeURIComponent('http%3A%2F%2Fwww.centurylink.com%2F');	MP.tSite = decodeURIComponent('http%3A%2F%2Fwww.centurylink.co.jp%2F');	MP.init();	langLinkHandler = function() {	    var langlinks = document.querySelectorAll('.language');	    for (var i = 0; i < langlinks.length; i++) {	        langlinks.item(i).onclick = function() {	            var lang = this.getAttribute('data-lang');	            var url = this.getAttribute('data-href');	            var tSite = MP.tSite.replace('http://', '').replace('https://', '');	            url = url.replace('http://', '').replace('https://', '');	            if(tSite != url)            	{            		MP.switchLanguage(url, lang, true);            	}	            return false;	        }	    }	};	if (window.addEventListener) {		window.addEventListener('load', langLinkHandler, false);	} else if (window.attachEvent) {		window.attachEvent('onload', langLinkHandler);	}	</script>	<!-- mp_snippet_ends -->		<!-- Lookbook script starts-->	<script src="https://app.cdn.lookbookhq.com/libraries/overlay/overlay.js"></script>	<link href="https://www.centurylink.co.jp/24/_app_cdn_lookbookhq_com/libraries/overlay/overlay.css" rel="stylesheet" type="text/css"/>    <!--lookbook script ends -->    			    	<!-- Google Tag Manager -->    		<noscript><iframe src="http://www.googletagmanager.com/ns.html?id=GTM-56C3QQ" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>		<script>			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':				new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],				j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=				'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);				})(window,document,'script','dataLayer','GTM-56C3QQ'			);		</script>		<!-- End Google Tag Manager -->    	        <link rel="stylesheet" href="http://www.centurylink.co.jp/etc/designs/cs/brightcove/shared.min.css" type="text/css"><link rel="stylesheet" href="http://www.centurylink.co.jp/etc/designs/ewcmbiz/clientlibs-all.min.css" type="text/css"><link rel="stylesheet" type="text/css" href="http://www.centurylink.co.jp/mp/custom_CSS/mpCSS.css"><link rel="stylesheet" type="text/css" href="http://www.centurylink.co.jp/mp/custom_CSS/mpJapanese_font.css"/></head>		<body>	<header>	<div><section class="corp-nav hLine bottom hidden-xs hidden-sm">    <div class="container">        <div class="corp-links">            <ul class="left padding-left-0">                <!-- mp_trans_remove_start --><!-- mp_trans_remove_start --><!-- mp_trans_remove_end --><!-- mp_trans_remove_end -->            </ul>            <ul class="right">                <li class="dropdown has-sub">                    <div href="#" data-toggle="dropdown" class="dropdown-toggle"> 国： <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                        <!-- mp_trans_add="EN-AU" <div class="flag-icon-background flag-icon flag-icon-au"></div>Australia -->                        <!-- mp_trans_add="EN-CA" <div class="flag-icon-background flag-icon flag-icon-ca"></div>Canada - English -->                        <!-- mp_trans_add="FR" <div class="flag-icon-background flag-icon flag-icon-ca"></div>Canada - French -->                        <!-- mp_trans_add="DE" <div class="flag-icon-background flag-icon flag-icon-de"></div>Germany -->                        <!-- mp_trans_add="EN-HK" <div class="flag-icon-background flag-icon flag-icon-hk"></div>Hong Kong - English -->                        <!-- mp_trans_add="ZH" <div class="flag-icon-background flag-icon flag-icon-hk"></div>Hong Kong - Chinese -->                         <div class="flag-icon-background flag-icon flag-icon-jp"></div>日本                         <!-- mp_trans_add="EN-SG" <div class="flag-icon-background flag-icon flag-icon-sg"></div>Singapore -->                        <!-- mp_trans_add="EN-UK" <div class="flag-icon-background flag-icon flag-icon-gb"></div>United Kingdom -->                        <i class="fa fa-chevron-down"></i>                    </div>                    <ul class="dropdown-menu country-menu padding-left-0">                        <li><a id="lang_en-au" data-href="http://www.centurylink.com.au/" mpdisurl href="//www.centurylink.com.au/" class="language" data-region="au"> <div class="flag-icon-background flag-icon flag-icon-au"></div> オーストラリア</a></li>                        <li><a id="lang_en-ca" data-href="http://www.centurylink.ca/" mpdisurl href="//www.centurylink.ca/" class="language" data-region="ca"> <div class="flag-icon-background flag-icon flag-icon-ca"></div> カナダ - 英語</a></li>                        <li><a id="lang_fr" data-lang="fr" data-href="http://www.centurylink.ca/fr/" mpdisurl href="//www.centurylink.ca/fr/" class="language" data-region="fr"> <div class="flag-icon-background flag-icon flag-icon-ca"></div> カナダ - フランス語</a></li>                        <li><a id="lang_de" data-lang="de" data-href="http://www.centurylink.de/" mpdisurl href="//www.centurylink.de/" class="language" data-region="de"> <div class="flag-icon-background flag-icon flag-icon-de"></div> ドイツ</a></li>                        <li><a id="lang_en-hk" data-href="http://www.centurylink.hk/" mpdisurl href="//www.centurylink.hk/" class="language" data-region="hk"> <div class="flag-icon-background flag-icon flag-icon-hk"></div> 香港 - 英語</a></li>                        <li><a id="lang_zh" data-lang="zh" data-href="http://www.centurylink.hk/zh/" mpdisurl href="//www.centurylink.hk/zh/" class="language" data-region="zh"> <div class="flag-icon-background flag-icon flag-icon-hk"></div> 香港 - 中国語</a></li>                        <li><a id="lang_ja-jp" data-href="http://www.centurylink.co.jp/" mpdisurl href="//www.centurylink.co.jp/" class="language" data-region="jp"> <div class="flag-icon-background flag-icon flag-icon-jp"></div> 日本</a></li>                        <li><a id="lang_en-sg" data-href="http://www.centurylink.com.sg/" mpdisurl href="//www.centurylink.com.sg/" class="language" data-region="sg"> <div class="flag-icon-background flag-icon flag-icon-sg"></div> シンガポール</a></li>                        <li><a id="lang_en-gb" data-href="http://www.centurylink.co.uk/" mpdisurl href="//www.centurylink.co.uk/" class="language" data-region="gb"> <div class="flag-icon-background flag-icon flag-icon-gb"></div> イギリス</a></li>                        <li><a id="lang_en-us" data-lang="en" data-href="http://www.centurylink.com/" mpdisurl href="http://www.centurylink.com/business/enterprise/" class="language" data-region="us"> <div class="flag-icon-background flag-icon flag-icon-us"></div> 米国</a></li>                    </ul>                </li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                  <li>[hrefx][hrefx][hrefx]</li>                 <li class="dropdown has-sub">                    <div href="#" data-toggle="dropdown" class="dropdown-toggle"> 企業情報 <i class="fa fa-chevron-down"></i></div>                    <ul class="dropdown-menu padding-left-0">                        <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                         <li>[hrefx][hrefx][hrefx][hrefx]</li>                         <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                        <!-- mp_trans_add="EN-CA,FR" <li>[hrefx]</li> -->                         <li>[hrefx][hrefx][hrefx][hrefx]</li>                         <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                        <!-- mp_trans_add="EN-CA,FR" <li>[hrefx]</li> -->                         <li>[hrefx][hrefx][hrefx][hrefx]</li>                         <!-- mp_trans_add="EN-UK" <li>[hrefx]</li> -->                        <li>[hrefx][hrefx][hrefx][hrefx]</li>                        <li>[hrefx][hrefx][hrefx][hrefx]</li>                         <li>[hrefx][hrefx][hrefx]</li>                         <li>[hrefx][hrefx][hrefx][hrefx]</li>                    </ul>                </li>                <li class="dropdown has-sub">                    <div href="#" data-toggle="dropdown" class="dropdown-toggle"> サインイン <i class="fa fa-chevron-down"></i></div>                    <ul class="dropdown-menu dropdown-menu-right padding-left-0">                        <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                        <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                         <li>[hrefx] [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                        <!-- mp_trans_add="DE,EN-UK" <li>[hrefx]</li> -->                    </ul>                </li>            </ul>            <div class="clearfix"></div>        </div>    </div></section><section class="head-content hidden-xs hidden-sm">    <div class="container">                <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->        <!-- mp_trans_add="EN-AU" [hrefx] -->        <!-- mp_trans_add="EN-CA" [hrefx] -->        <!-- mp_trans_add="FR" [hrefx] -->        <!-- mp_trans_add="DE" [hrefx] -->        <!-- mp_trans_add="EN-SG" [hrefx] -->        <!-- mp_trans_add="EN-HK" [hrefx] -->        <!-- mp_trans_add="ZH" [hrefx] -->         [hrefx]         <!-- mp_trans_add="EN-UK" [hrefx] -->        <div class="tf-num-container"><span class="sales-text bold">営業：&nbsp;&nbsp;</span>            <span class="sales-number">                <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                <!-- mp_trans_add="EN-AU" +61 2 9006 1101 -->                <!-- mp_trans_add="EN-CA,FR" 1-877-387-3764 -->                <!-- mp_trans_add="DE" +49 (0) 207 400 5600 -->                <!-- mp_trans_add="EN-HK,ZH" +852 2190 8798 -->                 +81 3 6435 9658                 <!-- mp_trans_add="EN-SG" +65 6768 8098 -->                <!-- mp_trans_add="EN-UK" +44 (0) 207 400 5600 -->			</span>            <br/>            <span class="support-text bold">代表：&nbsp;&nbsp;</span>            <span class="support-number">                <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                <!-- mp_trans_add="EN-AU" 1-800-097-572 -->                <!-- mp_trans_add="EN-CA,FR" 1-866-296-5335 -->                <!-- mp_trans_add="DE" 00 800 72 884 743 -->                <!-- mp_trans_add="EN-HK" +65 6768 8099 -->                <!-- mp_trans_add="ZH" +852 2190 8798 -->                 +81 3 6435 9601                 <!-- mp_trans_add="EN-SG" +65 6768 8099 -->                <!-- mp_trans_add="EN-UK" 00 800 72 884 743 -->			</span>        </div>		<section class="ctl-search">		    <form name="search" id="search" method="get" action="http://www.centurylink.co.jp/search.html" enctype="application/x-www-form-urlencoded" accept-charset="US-ASCII" onsubmit="trackSearch(document.search.q.value);">		        <label for="search" class="hidden">CenturyLinkの事業を検索 </label>		        <div class="has-feedback">		            <input type="text" name="search" id="search" title="CenturyLinkの事業を検索" value="検索" maxlength="60" class="search_textBox search-box-default-value">		            <span class="glyphicon glyphicon-search form-control-feedback"></span>		            <span id="closeMenu" class="ctl-search-clear visible-xs visible-sm"></span>		        </div>		        <input type="hidden" title="検索ボタン" class="search_btn" name="search_submit" id="search_submit">				        		        <input type="hidden" value="0" name="start">		        <input type="hidden" value="25" name="limit">				        <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->		        <!-- mp_trans_add="EN-AU" <input type="hidden" value="business_global_au" name="feed"> -->		        <!-- mp_trans_add="EN-CA" <input type="hidden" value="business_global_ca" name="feed"> -->		        <!-- mp_trans_add="FR" <input type="hidden" value="business_global_ca-fr" name="feed"> -->		        <!-- mp_trans_add="DE" <input type="hidden" value="business_global_de" name="feed"> -->		        <!-- mp_trans_add="EN-HK" <input type="hidden" value="business_global_hk" name="feed"> -->		        <!-- mp_trans_add="ZH" <input type="hidden" value="business_global_hk-zh" name="feed"> -->		         <input type="hidden" value="business_global_jp" name="feed"> 		        <!-- mp_trans_add="EN-SG" <input type="hidden" value="business_global_sg" name="feed"> -->		        <!-- mp_trans_add="EN-UK" <input type="hidden" value="business_global_uk" name="feed"> -->		    </form>		</section>        <div class="clearfix"></div>    </div></section><section class="global-nav">    <div class="navbar-header">        <div class="hidden-lg hidden-md">            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->            <!-- mp_trans_add="EN-AU" [hrefx] -->            <!-- mp_trans_add="EN-CA" [hrefx] -->            <!-- mp_trans_add="FR" [hrefx] -->            <!-- mp_trans_add="DE" [hrefx] -->            <!-- mp_trans_add="EN-SG" [hrefx] -->            <!-- mp_trans_add="ZH" [hrefx] -->            <!-- mp_trans_add="EN-HK" [hrefx] -->             [hrefx]             <!-- mp_trans_add="EN-UK" [hrefx] -->        </div>        <button type="button" class="navbar-toggle offcanvas-toggle" data-toggle="offcanvas" data-target="#js-bootstrap-offcanvas-2">            <span class="sr-only">ナビゲーションの切替</span> <span class="icon-bar"></span>            <span class="icon-bar"></span> <span class="icon-bar"></span>        </button>    </div>    <nav class="navbar navbar-collapse navbar-offcanvas navbar-collapse-right navbar-offcanvas-fade" role="navigation" id="js-bootstrap-offcanvas-2">        <div class="ctl-navbar ">            <div class="container">                <div class="tf-num-container visible-sm visible-xs">                    <span class="support-text bold">代表：&nbsp;&nbsp;</span>                    <span class="support-number">                        <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                        <!-- mp_trans_add="EN-AU" 1-800-097-572 -->                        <!-- mp_trans_add="EN-CA,FR" 1-866-296-5335 -->                        <!-- mp_trans_add="DE" 00 800 72 884 743 -->                        <!-- mp_trans_add="EN-HK" +65 6768 8099 -->                        <!-- mp_trans_add="ZH" +852 2190 8798 -->                         +81 3 6435 9601                         <!-- mp_trans_add="EN-SG" +65 6768 8099 -->                        <!-- mp_trans_add="EN-UK" 00 800 72 884 743 -->					</span>                    <br/>                    <span class="sales-text bold">営業：&nbsp;&nbsp;</span>                    <span class="sales-number">                        <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                        <!-- mp_trans_add="EN-AU" +61 2 9006 1101 -->                        <!-- mp_trans_add="EN-CA,FR" 1-877-387-3764 -->                        <!-- mp_trans_add="DE" +49 (0) 207 400 5600 -->                        <!-- mp_trans_add="EN-HK,ZH" +852 2190 8798 -->                         +81 3 6435 9658                         <!-- mp_trans_add="EN-SG" +65 6768 8098 -->                        <!-- mp_trans_add="EN-UK" +44 (0) 207 400 5600 -->					</span>                </div>				<section class="ctl-search visible-xs">				    <form name="search" id="search" method="get" action="http://www.centurylink.co.jp/search.html" enctype="application/x-www-form-urlencoded" accept-charset="US-ASCII" onsubmit="trackSearch(document.search.q.value);">				        <label for="search" class="hidden">CenturyLinkの事業を検索 </label>				        <div class="has-feedback">				            <input type="text" name="search" id="search" title="CenturyLinkの事業を検索" value="検索" maxlength="60" class="search_textBox" onfocus="this.value=''">				            <span class="glyphicon glyphicon-search form-control-feedback"></span>				            <span id="closeMenu" class="ctl-search-clear visible-xs visible-sm"></span>				        </div>				        <input type="hidden" title="検索ボタン" class="search_btn" name="search_submit" id="search_submit">								        				        <input type="hidden" value="0" name="start">				        <input type="hidden" value="25" name="limit">								        <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->				        <!-- mp_trans_add="EN-AU" <input type="hidden" value="business_global_au" name="feed"> -->				        <!-- mp_trans_add="EN-CA" <input type="hidden" value="business_global_ca" name="feed"> -->				        <!-- mp_trans_add="FR" <input type="hidden" value="business_global_ca-fr" name="feed"> -->				        <!-- mp_trans_add="DE" <input type="hidden" value="business_global_de" name="feed"> -->				        <!-- mp_trans_add="EN-HK" <input type="hidden" value="business_global_hk" name="feed"> -->				        <!-- mp_trans_add="ZH" <input type="hidden" value="business_global_hk-zh" name="feed"> -->				         <input type="hidden" value="business_global_jp" name="feed"> 				        <!-- mp_trans_add="EN-SG" <input type="hidden" value="business_global_sg" name="feed"> -->				        <!-- mp_trans_add="EN-UK" <input type="hidden" value="business_global_uk" name="feed"> -->				    </form>				</section>                <div class="clearfix"></div>                <ul class="nav navbar-nav">                    <li class="solutions dropdown">                        <a id="solution" href="" class="dropdown-toggle" data-toggle="dropdown" role="button">ソリューション＆業界 <i class="fa fa-chevron-down"></i> </a> <span class="glyphicon glyphicon-triangle-top"></span>                        <div class="dropdown-container">                            <div class="dropdown-menu">                                <div class="row">                                    <div class="col-md-4">                                        <div class="menu-panel">                                            <ul>                                                <li class="dropdown-submenu pull-left active">[hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_add="EN-UK" <li>[hrefx]</li> -->                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                        </ul>                                                    </div>                                                </li>                                            </ul>                                        </div>                                    </div>                                    <div class="col-sm-8 col-md-8 hidden-xs hidden-sm">                                        <div class="slide-panel">                                            <div class="col-sm-6 col-md-6 col-sm-offset-6 col-md-offset-6">                                                <div><div class="spot-light VS-T-0 VS-B-20">    <div class="spot-light-banner">        <h3>[H3]</h3>        <p>最新ニュースや市場傾向をご紹介。</p>    </div>    <section class="spot-light-links">        <a href="http://www.centurylink.co.jp/managed-hybrid-it.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>事業の機敏性の促進</h4>                        <p>安全かつ拡張可能なハイブリッドITソリューション</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/solutions/technology-that-enhances-customer-experiences.html">            <div class="spot-light-article light-bg">                <div class="article-text">                    <div class="headline-wrap">                        <h4>顧客体験の充実</h4>                        <p>顧客体験を高める技術</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/solutions/digital-transformation.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>オペレーショナルエクセレンスの向上</h4>                        <p>効率性と収益性を高める新たな機会を創出</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/it-security/it-risk-mitigation.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>ビジネスのリスクを軽減</h4>                        <p>コンプライアンスの脆弱性を特定し、サイバーセキュリティの脅威の検出</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>       </section></div></div>                                                <div class="clearfix"></div>                                            </div>                                        </div>                                    </div>                                </div>                            </div>                            <div class="clearfix"></div>                        </div>                    </li>                    <li class="dropdown products-and-services">                        <a id="products" href="" class="dropdown-toggle" data-toggle="dropdown" role="button">製品＆サービス <i class="fa fa-chevron-down"></i> </a> <span class="glyphicon glyphicon-triangle-top"></span>                        <div class="dropdown-container">                            <div class="dropdown-menu">                                <div class="row">                                    <div class="col-md-4">                                        <div class="menu-panel">                                            <ul>                                                <li class="dropdown-submenu pull-left active">[hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx]</li>                                                            <li class="title">[hrefx][hrefx]</li>                                                            <li class="title">[hrefx][hrefx]</li>                                                            <li class="title">[hrefx][hrefx]</li>                                                            <li>[hrefx]</li>                                                            <!-- mp_trans_add="DE,EN-UK" <li> [hrefx] </li> -->                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_add="EN-CA,FR" <li> [hrefx] </li> -->                                                            <li>[hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                             <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_add="EN-CA,FR" <li> [hrefx] </li> -->                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li> </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <!-- mp_trans_remove_start --><!-- mp_trans_remove_start --><!-- mp_trans_remove_end --><!-- mp_trans_remove_end -->                                            </ul>                                        </div>                                    </div>                                    <div class="col-sm-8 col-md-8 hidden-xs hidden-sm">                                        <div class="slide-panel">                                            <div class="col-sm-6 col-md-6 col-sm-offset-6 col-md-offset-6">                                                <div><div class="spot-light VS-T-0 VS-B-20">    <div class="spot-light-banner">        <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>        <p>最新ニュースや市場傾向をご紹介。</p>    </div>    <section class="spot-light-links">        <a href="http://www.centurylink.co.jp/managed-hybrid-it.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>事業の機敏性の促進</h4>                        <p>安全かつ拡張可能なハイブリッドITソリューション</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/solutions/technology-that-enhances-customer-experiences.html">            <div class="spot-light-article light-bg">                <div class="article-text">                    <div class="headline-wrap">                        <h4>顧客体験の充実</h4>                        <p>顧客体験を高める技術</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/solutions/digital-transformation.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>オペレーショナルエクセレンスの向上</h4>                        <p>効率性と収益性を高める新たな機会を創出</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/it-security/it-risk-mitigation.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>ビジネスのリスクを軽減</h4>                        <p>コンプライアンスの脆弱性を特定し、サイバーセキュリティの脅威の検出</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>       </section></div></div>                                            </div>                                            <div class="clearfix"></div>                                        </div>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                            <div class="clearfix"></div>                        </div>                    </li>                    <li class="dropdown data-centers">                        <a id="datacenters" href="http://www.centurylink.co.jp/colocation/data-centers/" class="dropdown-toggle" data-toggle="dropdown" role="button"> データセンター <i class="fa fa-chevron-down"></i> </a>                        <span class="glyphicon glyphicon-triangle-top"></span>                        <div class="dropdown-container">                            <div class="dropdown-menu">                                <div class="row">                                    <div class="col-sm-4 col-md-4">                                        <div class="menu-panel">                                            <ul class="">                                                <li class="dropdown-submenu pull-left active">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu no-gutter">                                                        <div class="col-sm-6 col-md-7">                                                            <ul>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                                <li>[hrefx]</li>                                                            </ul>                                                        </div>                                                        <div class="col-sm-6 col-md-5">                                                            <ul>                                                                <li>&nbsp;</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx]</li>                                                            </ul>                                                        </div>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left active">[hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu no-gutter">                                                        <div class="col-sm-6 col-md-7">                                                            <ul>                                                                <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            </ul>                                                        </div>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx] <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li class="title">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                            </ul>                                        </div>                                    </div>                                    <div class="col-sm-8 col-md-8 hidden-sm hidden-xs">                                        <div class="slide-panel">                                            <div class="col-sm-6 col-md-6 col-sm-offset-6 col-md-offset-6">                                                <div><div class="spot-light VS-T-0 VS-B-20">    <div class="spot-light-banner">        <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>        <p>最新ニュースや市場傾向をご紹介。</p>    </div>    <section class="spot-light-links">        <a href="http://www.centurylink.co.jp/managed-hybrid-it.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>事業の機敏性の促進</h4>                        <p>安全かつ拡張可能なハイブリッドITソリューション</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/solutions/technology-that-enhances-customer-experiences.html">            <div class="spot-light-article light-bg">                <div class="article-text">                    <div class="headline-wrap">                        <h4>顧客体験の充実</h4>                        <p>顧客体験を高める技術</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/solutions/digital-transformation.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>オペレーショナルエクセレンスの向上</h4>                        <p>効率性と収益性を高める新たな機会を創出</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/it-security/it-risk-mitigation.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>ビジネスのリスクを軽減</h4>                        <p>コンプライアンスの脆弱性を特定し、サイバーセキュリティの脅威の検出</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>       </section></div></div>                                            </div>                                            <div class="clearfix"></div>                                        </div>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                            <div class="clearfix"></div>                        </div>                    </li>                    <li class="dropdown resources">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] <span class="glyphicon glyphicon-triangle-top"></span>                        <div class="dropdown-container">                            <div class="dropdown-menu">                                <div class="row">                                    <div class="col-sm-4 col-md-4">                                        <div class="menu-panel">                                            <ul class="">                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                             <li> [hrefx][hrefx][hrefx][hrefx][hrefx] </li>                                                             <!-- mp_trans_add="EN-CA,FR" <li> [hrefx] </li> -->                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_add="EN-UK" <li> [hrefx] </li> -->                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                             <li>[hrefx] [hrefx][hrefx][hrefx][hrefx]                                                            <!-- mp_trans_add="DE,EN-UK" <li>[hrefx]</li> -->                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <!-- mp_trans_add="EN-AU,EN-HK,EN-SG" <li>[hrefx] -->                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_add="EN-AU,EN-HK,EN-SG,EN-UK" <li>[hrefx] -->                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                        </ul>                                                    </div>                                                </li>                                                <li class="dropdown-submenu pull-left">                                                    [hrefx][hrefx][hrefx][hrefx][hrefx]                                                    <div class="dropdown-menu">                                                        <ul>                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                            <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                        </ul>                                                    </div>                                                </li>                                            </ul>                                        </div>                                    </div>                                    <div class="col-sm-8 col-md-8 hidden-sm hidden-xs">                                        <div class="slide-panel">                                            <div class="col-sm-6 col-md-6 col-sm-offset-6 col-md-offset-6">                                                <div><div class="spot-light VS-T-0 VS-B-20">    <div class="spot-light-banner">        <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        <p>最新ニュースや市場傾向をご紹介。</p>    </div>    <section class="spot-light-links">        <a href="http://www.centurylink.co.jp/managed-hybrid-it.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>事業の機敏性の促進</h4>                        <p>安全かつ拡張可能なハイブリッドITソリューション</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/solutions/technology-that-enhances-customer-experiences.html">            <div class="spot-light-article light-bg">                <div class="article-text">                    <div class="headline-wrap">                        <h4>顧客体験の充実</h4>                        <p>顧客体験を高める技術</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/solutions/digital-transformation.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>オペレーショナルエクセレンスの向上</h4>                        <p>効率性と収益性を高める新たな機会を創出</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>        <a href="http://www.centurylink.co.jp/it-security/it-risk-mitigation.html">            <div class="spot-light-article">                <div class="article-text">                    <div>                        <h4>ビジネスのリスクを軽減</h4>                        <p>コンプライアンスの脆弱性を特定し、サイバーセキュリティの脅威の検出</p>                    </div>                </div>                <div class="article-arrow">                    <span class="fa fa-chevron-right">                    </span>                </div>            </div>        </a>       </section></div></div>                                            </div>                                            <div class="clearfix"></div>                                        </div>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                            <div class="clearfix"></div>                        </div>                    </li>                    <li class=" visible-xs dropdown industryInsights">[hrefx][hrefx][hrefx][hrefx][hrefx] <span class="glyphicon glyphicon-triangle-top"></span>                        <div class="dropdown-container">                            <div class="dropdown-menu">                                <div class="row">                                    <div class="col-sm-4 col-md-4">                                        <div class="menu-panel">                                            <ul class="landingLinks">                                                <li class="hybridItLink">[hrefx][hrefx][hrefx]</li>                                                <li class="spotLightSection">[hrefx][hrefx][hrefx]</li>                                                <li class="spotLightSection">[hrefx][hrefx][hrefx]</li>                                            </ul>                                        </div>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                            <div class="clearfix"></div>                        </div>                    </li>                    <li class="visible-xs menuLinkItem contactUsLink">[hrefx][hrefx][hrefx][hrefx]</li>                    <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                     <li class="visible-xs menuLinkItem partnersLink">[hrefx][hrefx][hrefx][hrefx]</li>                     <li class="visible-xs menuLinkItem dropdown aboutLink">[hrefx][hrefx][hrefx][hrefx] <span class="glyphicon glyphicon-triangle-top"></span>                        <div class="dropdown-container">                            <div class="dropdown-menu">                                <div class="row">                                    <div class="col-sm-4 col-md-4">                                        <div class="menu-panel">                                            <ul class="aboutLinks">                                                <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                 <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx]</li>                                                 <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->												<!-- mp_trans_add="EN-CA,FR" <li class="dropdown-submenu pull-left">[hrefx]</li> -->                                                 <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx]</li>                                                 <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                <!-- mp_trans_add="EN-CA,FR" <li class="dropdown-submenu pull-left">[hrefx]</li> -->                                                 <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx]</li>                                                 <!-- mp_trans_add="EN-UK" <li class="dropdown-submenu pull-left">[hrefx]</li> -->                                                <li class="dropdown-submenu pull-left">[hrefx][hrefx]</li>                                               	<li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx]</li>                                                 <li class="dropdown-submenu pull-left"> [hrefx][hrefx][hrefx]</li>                                                 <li class="dropdown-submenu pull-left">[hrefx][hrefx][hrefx]</li>                                            </ul>                                        </div>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                            <div class="clearfix"></div>                        </div>                    </li>                    <li class="visible-xs menuLinkItem dropdown countriesLink"><a href="" class="dropdown-toggle" data-toggle="dropdown" role="button"> <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                        <!-- mp_trans_add="EN-AU" <div class="flag-icon-background flag-icon flag-icon-au"></div>Australia -->                        <!-- mp_trans_add="EN-CA" <div class="flag-icon-background flag-icon flag-icon-ca"></div>Canada - English -->                        <!-- mp_trans_add="FR" <div class="flag-icon-background flag-icon flag-icon-ca"></div>Canada - French -->                        <!-- mp_trans_add="DE" <div class="flag-icon-background flag-icon flag-icon-de"></div>Germany -->                        <!-- mp_trans_add="EN-HK" <div class="flag-icon-background flag-icon flag-icon-hk"></div>Hong Kong - English -->                        <!-- mp_trans_add="ZH" <div class="flag-icon-background flag-icon flag-icon-hk"></div>Hong Kong - Chinese -->                         <div class="flag-icon-background flag-icon flag-icon-jp"></div>日本                         <!-- mp_trans_add="EN-SG" <div class="flag-icon-background flag-icon flag-icon-sg"></div>Singapore -->                        <!-- mp_trans_add="EN-UK" <div class="flag-icon-background flag-icon flag-icon-gb"></div>United Kingdom --> <i class="fa fa-chevron-down"></i> </a> <span class="glyphicon glyphicon-triangle-top"></span>                        <div class="dropdown-container">                            <div class="dropdown-menu">                                <div class="row">                                    <div class="col-sm-4 col-md-4">                                        <div class="menu-panel">                                            <ul class="countryLinks">                                                <li class="dropdown-submenu pull-left"><a id="lang_en-au" data-href="http://www.centurylink.com.au/" mpdisurl href="//www.centurylink.com.au/" class="language" data-region="au">オーストラリア</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_en-ca" data-href="http://www.centurylink.ca/" mpdisurl href="//www.centurylink.ca/" class="language" data-region="ca">カナダ - 英語</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_fr" data-lang="fr" data-href="http://www.centurylink.ca/fr/" mpdisurl href="//www.centurylink.ca/fr/" class="language" data-region="fr">カナダ - フランス語</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_de" data-lang="de" data-href="http://www.centurylink.de/" mpdisurl href="//www.centurylink.de/" class="language" data-region="de">ドイツ</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_en-hk" data-href="http://www.centurylink.hk/" mpdisurl href="//www.centurylink.hk/" class="language" data-region="hk">香港 - 英語</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_zh" data-lang="zh" data-href="http://www.centurylink.hk/zh/" mpdisurl href="//www.centurylink.hk/zh/" class="language" data-region="zh">香港 - 中国語</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_ja-jp" data-href="http://www.centurylink.co.jp/" mpdisurl href="//www.centurylink.co.jp/" class="language" data-region="jp">日本</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_en-sg" data-href="http://www.centurylink.com.sg/" mpdisurl href="//www.centurylink.com.sg/" class="language" data-region="sg">シンガポール</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_en-gb" data-href="http://www.centurylink.co.uk/" mpdisurl href="//www.centurylink.co.uk/" class="language" data-region="gb">イギリス</a></li>                                                <li class="dropdown-submenu pull-left"><a id="lang_en-us" data-lang="en" data-href="http://www.centurylink.com/" mpdisurl href="http://www.centurylink.com/business/enterprise/" class="language" data-region="us">米国</a></li>                                            </ul>                                        </div>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                            <div class="clearfix"></div>                        </div>                    </li>                    <li class="visible-xs menuLinkItem dropdown loginLink">[hrefx] <span class="glyphicon glyphicon-triangle-top"></span>                        <div class="dropdown-container">                            <div class="dropdown-menu">                                <div class="row">                                    <div class="col-sm-4 col-md-4">                                        <div class="menu-panel">                                            <ul class="signInLinks">                                                <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                <li class="dropdown-submenu pull-left">[hrefx]</li>                                                <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                 <li class="dropdown-submenu pull-left">[hrefx]                                                 <!-- mp_trans_add="DE,EN-UK" <li class="dropdown-submenu pull-left">[hrefx]</li> -->                                            </ul>                                        </div>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                            <div class="clearfix"></div>                        </div>                    </li>                    <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                </ul>                <div class="clearfix"></div>            </div>        </div>    </nav></section></div>		<nav id="sub-nav">		<div class="container">			<div class="row">	            <div class="col-xs-12 col-sm-12 dropdown">	                <p>業界の洞察：</p>					<ul class="visible-xs visible-sm">	                	<li>[hrefx]	                		<ul class="dropdown-menu" role="menu">	                            <li><a class="sm-dark-gray-font" href="http://www.centurylink.co.jp/managed-hybrid-it.html">事業の機敏性の促進</a></li>	                            	                			                            <li><a class="sm-dark-gray-font" href="http://www.centurylink.co.jp/speed-of-business.html">顧客体験の充実</a></li>	                            	                			                            <li><a class="sm-dark-gray-font" href="http://www.centurylink.co.jp/collaborative-innovation.html">オペレーショナルエクセレンスの向上</a></li>	                            	                			                            <li><a class="sm-dark-gray-font" href="http://www.centurylink.co.jp/stay-a-step-ahead.html">リスク軽減</a></li>	                            	                		</ul> 	                    </li>	                 </ul>		                <ul class="hidden-xs hidden-sm">	                    <li><a class="white-font" href="http://www.centurylink.co.jp/managed-hybrid-it.html">事業の機敏性の促進</a></li>	                    	                	                    <li><a class="white-font" href="http://www.centurylink.co.jp/speed-of-business.html">顧客体験の充実</a></li>	                    	                	                    <li><a class="white-font" href="http://www.centurylink.co.jp/collaborative-innovation.html">オペレーショナルエクセレンスの向上</a></li>	                    	                	                    <li><a class="white-font" href="http://www.centurylink.co.jp/stay-a-step-ahead.html">リスク軽減</a></li>	                    	                </ul>	            </div>			</div>	            		</div>	</nav></header><div id="myModal0" class="modal fade" role="dialog">    <div class="modal-dialog width80  maxWidth960">    	<div class="modal-content"></div>    </div></div><div class="clearfix"></div>	<div class="business-body-with-subnav">	<div><div class="columnControl parbase section">	        	<section style="background-image:url(http://www.centurylink.com/business/enterprise/it-security/it-risk-mitigation/_jcr_content/par/columncontrol_copy_c/image.img.jpg/1496333984894.jpg)" class="VS-T-0 VS-B-0   white-border none-opacity-0">		<div class="container">																            	<div>		<div class="row row-eq-height   white-border ">	            	        <div data-index="col0" class="col-ewcm-xs-12 col-ewcm-md-9 col-ewcm-sm-6 ">        	        <div><div class="seoHeadline section"> <div class="  leftAlign VS-T-40 VS-B-20">    		        <h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>    </div>  </div><div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 big white-font">	    	    		    <div>ビジネスの重要な資産を保護して顧客の信頼を勝ち取りましょう。</div>        </div></div><div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-40 large white-font">	    	    		    <div>積極的なセキュリティ対策で、コンプライアンスの脆弱性を特定し、サイバーセキュリティの脅威の検出、阻止、修正を低コストで実現。</div>        </div></div></div>            	</div>	            	        <div data-index="col1" class="col-ewcm-xs-12 col-ewcm-md-3 col-ewcm-sm-6 ">        	        <div><div class="text parbase section"><div class="cq-placeholder" data-emptytext="Text Component: Click to access."></div><div class="textComponent singleSpaceList  VS-B-20 normalCascade dark-gray-fontCascade">	<div class="start">	    <div></div>	</div></div></div><div class="image parbase section">    <a href="http://www.centurylink.co.jp/?1036077272;amdU78nF2DVDVu6CGk6UViq6gPchau6CgZUFILrWak6c7DsFGk6UGiqN7tcWGOyfgPyL2Ddnak6xGZcL2D-nak6wgt79gPcLam49IZrhVmruekjwgtT9gkzhIkVcG_HWGk-H7tcUeOHWGiqZak-c7u3.q1" target="_blank">                    <img src="http://www.centurylink.com/business/enterprise/it-security/it-risk-mitigation/_jcr_content/par/columncontrol_copy_c/col1/image_copy.img.png/1496426296625.png" class="VS-T-20 VS-B-20  img-responsive"/>                        </a>    <section class="imageModal">    <div id="myModal800" class="modal fade" role="dialog">			        <div class="image-dialog">                 <div class="image-content">                <div class="clearfix image-header">                    <button type="button" class="close fa fa-times" data-dismiss="modal"></button>                </div>                <div class="image-body">                    <img src="http://www.centurylink.com/business/enterprise/it-security/it-risk-mitigation/_jcr_content/par/columncontrol_copy_c/col1/image_copy.img.png/1496426296625.png" class=" img-responsive"/>                </div>            </div>        </div>    </div></section></div></div>            	</div>	                </div>    </div>        					</div>	</section></div><div class="impactStrip parbase section"><section class="impact-strip none-opacity-0 VS-T-0 VS-B-0">    <div class="image-holder">        <div>            <div class="row">                <div class="impact-container col-xs-12">                    <div class="container-inner-color dark-gray-background-opacity-0">                                     <p class="impact-strip-headline white-font large centerAlign"><b>451 RESEARCHによるデジタル変革についての最新情報</b> [hrefx]</p>                    </div>                                  </div>            </div>        </div>    </div> </section></div><div class="internationalizer parbase section"><div class="internationalizer-component">        				<!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-AU,EN-CA,EN-HK,EN-SG,EN-UK"		<div class="columnControl parbase section">	        	<section class="VS-T-40 VS-B-0   white-border none-opacity-0">		<div class="container">																            	<div>		<div class="row row-eq-height   white-border ">	            	        <div data-index="col0" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="/business/enterprise/assets/video/managed-security-service-portal-demo.html" target="_self">        <img class="teaser-image img-responsive" src="/business/enterprise/assets/video/managed-security-service-portal-demo/_jcr_content/teaserimage.img.jpg" alt="DEMO: CenturyLink Managed Security Services Portal">        </a>    </div>    <div>        <div class="teaser-article-type">Video</div>        <div class="teaser-article-title">            [hrefx]        </div>                <p class="teaser-article-content">Look inside CenturyLink’s innovative Managed Security Service portal to discover how we help organizations move from a reactive to a proactive cybersecurity stance.</p>                	</div>    </div></div></div>            	</div>	            	        <div data-index="col1" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="/business/enterprise/assets/report/emerging-managed-security-services-market.html" target="_self">        <img class="teaser-image img-responsive" src="/business/enterprise/assets/report/emerging-managed-security-services-market/_jcr_content/teaserimage.img.png/1472620650290.png" alt="Find Out Who Leads the Market in Managed Security Services—IDC MarketScape">        </a>    </div>    <div>        <div class="teaser-article-type">Analyst Report</div>        <div class="teaser-article-title">            [hrefx]        </div>                <p class="teaser-article-content">Learn who delivers the best functionality, benefits and expertise in managed security services from this IDC MarketScape report.</p>                	</div>    </div></div></div>            	</div>	            	        <div data-index="col2" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="/business/enterprise/assets/report/managed-security-services-providers-q3-2016.html" target="_self">        <img class="teaser-image img-responsive" src="/business/enterprise/assets/report/managed-security-services-providers-q3-2016/_jcr_content/teaserimage.img.png/1472619020793.png" alt="11 Most Significant MSS Providers in North America – Forrester Wave">        </a>    </div>    <div>        <div class="teaser-article-type">Analyst Report</div>        <div class="teaser-article-title">            [hrefx]        </div>                <p class="teaser-article-content">Learn why CenturyLink surpasses Verizon and AT&amp;T managed security services in this evaluation report from Forrester Wave.</p>                	</div>    </div></div></div>            	</div>	                </div>    </div>        					</div>	</section></div><div class="columnControl parbase section">	        	<section class="VS-T-40 VS-B-60   white-border none-opacity-0">		<div class="container">																            	<div>		<div class="row row-eq-height   white-border ">	            	        <div data-index="col0" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="/business/enterprise/assets/forrester-wave-ddos-services-providers-q3-2015.html" target="_self">        <img class="teaser-image img-responsive" src="/business/enterprise/assets/forrester-wave-ddos-services-providers-q3-2015/_jcr_content/teaserimage.img.png/1472574006766.png" alt="CenturyLink named as leader among DDoS Service Providers">        </a>    </div>    <div>        <div class="teaser-article-type">Forrester Report</div>        <div class="teaser-article-title">            [hrefx]        </div>                <p class="teaser-article-content">Download the Forrester report and learn about the most important trends and market shifts in the DDoS landscape.</p>                	</div>    </div></div></div>            	</div>	            	        <div data-index="col1" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="/business/enterprise/assets/white-paper/develop-a-stronger-cybersecurity-program.html" target="_self">        <img class="teaser-image img-responsive" src="/business/enterprise/assets/white-paper/develop-a-stronger-cybersecurity-program/_jcr_content/teaserimage.img.png/1476380386207.png" alt="Develop a Stronger Cybersecurity Program">        </a>    </div>    <div>        <div class="teaser-article-type">White Paper</div>        <div class="teaser-article-title">            [hrefx]        </div>                <p class="teaser-article-content">Learn how cybersecurity leaders can devise more effective, efficient security plans that deliver more value from your budget and resources.</p>                	</div>    </div></div></div>            	</div>	            	        <div data-index="col2" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="/business/enterprise/assets/white-paper/revisiting-the-cybersecurity-protection-myth.html" target="_self">        <img class="teaser-image img-responsive" src="/business/enterprise/assets/white-paper/revisiting-the-cybersecurity-protection-myth/_jcr_content/teaserimage.img.png/1476480597156.png" alt="Revisiting the Cybersecurity Protection Myth">        </a>    </div>    <div>        <div class="teaser-article-type">White Paper</div>        <div class="teaser-article-title">            [hrefx]        </div>                <p class="teaser-article-content">Find out why focusing your cybersecurity efforts on defense won’t protect you from a data breach.</p>                	</div>    </div></div></div>            	</div>	                </div>    </div>        					</div>	</section></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        								<div class="columnControl parbase section">	        	<section class="VS-T-40 VS-B-0   white-border none-opacity-0">		<div class="container">																            	<div>		<div class="row row-eq-height   white-border ">	            	        <div data-index="col0" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="http://www.centurylink.co.jp/assets/report/emerging-managed-security-services-market.html" target="_self">        <img class="teaser-image img-responsive" src="http://www.centurylink.com/business/enterprise/assets/report/emerging-managed-security-services-market/_jcr_content/teaserimage.img.png/1472620650290.png" alt="マネージドセキュリティサービス市場をリードする企業とは-IDC MarketScape">        </a>    </div>    <div>        <div class="teaser-article-type">アナリストレポート</div>        <div class="teaser-article-title">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </div>                <p class="teaser-article-content">IDC MarketScape レポートでは、マネージドセキュリティサービスにおいて、最も優れた機能性、メリット、専門性を提供する事業者について報告しています。</p>                	</div>    </div></div></div>            	</div>	            	        <div data-index="col1" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="http://www.centurylink.co.jp/assets/report/managed-security-services-providers-q3-2016.html" target="_self">        <img class="teaser-image img-responsive" src="http://www.centurylink.com/business/enterprise/assets/report/managed-security-services-providers-q3-2016/_jcr_content/teaserimage.img.png/1472619020793.png" alt="北米の最有力MSSプロバイダー11社 - Forrester Wave">        </a>    </div>    <div>        <div class="teaser-article-type">アナリストレポート</div>        <div class="teaser-article-title">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </div>                <p class="teaser-article-content">Forrester Waveによるこの評価レポートで、CenturyLinkがVerizonやAT&Tのマネージドセキュリティサービスを超えた理由をお確かめください。</p>                	</div>    </div></div></div>            	</div>	            	        <div data-index="col2" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="http://www.centurylink.co.jp/assets/forrester-wave-ddos-services-providers-q3-2015.html" target="_self">        <img class="teaser-image img-responsive" src="http://www.centurylink.com/business/enterprise/assets/forrester-wave-ddos-services-providers-q3-2015/_jcr_content/teaserimage.img.png/1472574006766.png" alt="CenturyLink、DDoSサービスプロバイダーの中のリーダーに選ばれる">        </a>    </div>    <div>        <div class="teaser-article-type">Forresterの報告書</div>        <div class="teaser-article-title">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </div>                <p class="teaser-article-content">Forresterによるレポートをダウンロードし、DDoSの状況における最重要のトレンドや市場の変動に関する情報をご覧ください。</p>                	</div>    </div></div></div>            	</div>	                </div>    </div>        					</div>	</section></div><div class="columnControl parbase section">	        	<section class="VS-T-40 VS-B-60   white-border none-opacity-0">		<div class="container">																            	<div>		<div class="row row-eq-height   white-border ">	            	        <div data-index="col0" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="http://www.centurylink.co.jp/assets/white-paper/develop-a-stronger-cybersecurity-program.html" target="_self">        <img class="teaser-image img-responsive" src="http://www.centurylink.com/business/enterprise/assets/white-paper/develop-a-stronger-cybersecurity-program/_jcr_content/teaserimage.img.png/1476380386207.png" alt="強力なサイバーセキュリティプログラムの開発">        </a>    </div>    <div>        <div class="teaser-article-type">ホワイトペーパー</div>        <div class="teaser-article-title">            [hrefx]        </div>                <p class="teaser-article-content">サイバーセキュリティのリーダーが、持てる予算とリソースからより多くの価値を引き出すために必要な、効果的かつ効率的なセキュリティプランをご覧ください。</p>                	</div>    </div></div></div>            	</div>	            	        <div data-index="col1" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="articleTeaser parbase section"><div class="teaser-content-default row">    <div>    	<a href="http://www.centurylink.co.jp/assets/white-paper/revisiting-the-cybersecurity-protection-myth.html" target="_self">        <img class="teaser-image img-responsive" src="http://www.centurylink.com/business/enterprise/assets/white-paper/revisiting-the-cybersecurity-protection-myth/_jcr_content/teaserimage.img.png/1476480597156.png" alt="サイバーセキュリティ対策にまつわる誤った通念についてもう一度考える">        </a>    </div>    <div>        <div class="teaser-article-type">ホワイトペーパー</div>        <div class="teaser-article-title">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </div>                <p class="teaser-article-content">防御に重点を置いたサイバーセキュリティへの取り組みだけでは、データ漏洩・侵害から企業を守ることができない理由をご覧ください。</p>                	</div>    </div></div></div>            	</div>	            	        <div data-index="col2" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div></div>            	</div>	                </div>    </div>        					</div>	</section></div>			</div></div><div class="reference parbase section"><div class="cq-dd-paragraph"><div class="pageEmpty page"><div class="cq-placeholder" data-emptytext="Update Properties."></div><section class="pageEmpty">	<div class="par"><div class="columnControl parbase section">	        	<section class="VS-T-0 VS-B-0   white-border dark-gray-background-opacity-0">		<div class="container">						<div class="row">				<div class="col-xs-12 noColumnPadding dark-gray-background-opacity-0">					<div class="innerBackground">						            	<div>		<div class="row row-eq-height   white-border ">	            	        <div data-index="col0" class="col-ewcm-xs-12 col-ewcm-md-12 col-ewcm-sm-6  noColumnPadding">        	        <div><div class="columnControl parbase section">	        	<section class="VS-T-40 VS-B-0   white-border none-opacity-0">		<div class="container">																        <div class="row row-eq-height ">	    <div class="col-xs-12 noColumnPadding">			<div><div class="commonHeadline section"><div class="commonHeadline  centerAlign  VS-T-0 VS-B-20 huge white-font"> まずはお問い合わせください </div></div></div>    	</div>    </div>    	<div>		<div class="row row-eq-height   white-border ">	            	        <div data-index="col0" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="internationalizer parbase section"><div class="internationalizer-component">        				<!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-CA,FR,DE,EN-UK"		<div class="actionTile parbase section"><div class="actionTileBox clearfix">    <div class="actionTileContainer  VS-T-40 VS-B-40  centerAlign ">                            <img src="/business/enterprise/hidden/start-bar/_jcr_content/par/columncontrol/col0/columncontrol/col0/internationalizer_852758925/international/actiontile_copy.img.png/1488241374354.png" alt="Request Consultation" class="actionImage  "/>                        <p class="actionHeadline white-font extraLarge">Request Consultation</p>        <div class="buttonContainer">            <div class=" actionTileButton ctaLinkContainer">                [hrefx]            </div>        </div>            </div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        								<div class="actionTile parbase section"><div class="actionTileBox clearfix">[metatags_descriptionx]                        <div class="buttonContainer">            <div class=" actionTileButton ctaLinkContainer">                [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            </div>        </div>            </div></div></div>			</div></div></div>            	</div>	            	        <div data-index="col1" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="dtmPersonalizer section"><div class="cq-placeholder" data-emptytext="DTM Personalizer for getStartedBladeChat">	<div id="getStartedBladeChat" style="display: none;"></div></div></div></div>            	</div>	            	        <div data-index="col2" class="col-ewcm-xs-12 col-ewcm-md-4 col-ewcm-sm-6 ">        	        <div><div class="actionTile parbase section"><div class="actionTileBox clearfix">    <div class="actionTileContainer  VS-T-40 VS-B-0  centerAlign adjustHeight">                            <img src="http://www.centurylink.com/business/enterprise/hidden/start-bar/_jcr_content/par/columncontrol/col0/columncontrol/col2/actiontile.img.png/1488240366792.png" alt="お電話" class="actionImage  "/>                        <p class="actionHeadline white-font extraLarge">お電話</p>                    </div></div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        				<!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-AU"		<div class="text parbase section"><div class="textComponent doubleSpaceList VS-T-0 VS-B-0 normalCascade white-fontCascade">	<div class="start">	    <div><p style="text-align: center;"><b>SALES: +61 2 9006 1101<br /> SUPPORT: 1800 097 572</b><br /></p></div>	</div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-CA,FR"		<div class="text parbase section"><div class="textComponent doubleSpaceList VS-T-0 VS-B-0 normalCascade white-fontCascade">	<div class="start">	    <div><p style="text-align: center;"><b>SALES: 1-877-387-3764 <br /> SUPPORT: 1-866-296-5335</b><br /></p></div>	</div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="DE"		<div class="text parbase section"><div class="textComponent doubleSpaceList VS-T-0 VS-B-0 normalCascade white-fontCascade">	<div class="start">	    <div><p style="text-align: center;"><b>SALES: +49 (0) 207 400 5600<br /> SUPPORT: 00 800 72 884 743</b><br /></p></div>	</div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-HK,ZH"		<div class="text parbase section"><div class="textComponent doubleSpaceList VS-T-0 VS-B-0 normalCascade white-fontCascade">	<div class="start">	    <div><p style="text-align: center;"><b>SALES: +852 2190 8798<br /> SUPPORT: +65 6768 8099</b><br /></p></div>	</div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        								<div class="text parbase section"><div class="textComponent doubleSpaceList VS-T-0 VS-B-0 normalCascade white-fontCascade">	<div class="start">	    <div><p style="text-align: center;"><b>営業：+81 3 6435 9658<br /> サポート：+81 3 6435 9601</b><br /></p></div>	</div></div></div>			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-SG"		<div class="text parbase section"><div class="textComponent doubleSpaceList VS-T-0 VS-B-0 normalCascade white-fontCascade">	<div class="start">	    <div><p style="text-align: center;"><b>SALES: +65 6768 8098 <br /> SUPPORT: +65 6768 8099</b><br /></p></div>	</div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-UK"		<div class="text parbase section"><div class="textComponent doubleSpaceList VS-T-0 VS-B-0 normalCascade white-fontCascade">	<div class="start">	    <div><p style="text-align: center;"><b>SALES: +44 (0) 207 400 5600<br /> SUPPORT: 00 800 72 884 743</b><br /></p></div>	</div></div></div>		-->	</div></div></div>            	</div>	                </div>    </div>        					</div>	</section></div></div>            	</div>	                </div>    </div>        					</div>				</div>			</div>								</div>	</section></div></div></section></div></div></div></div></div>	<footer>	<div class="container m0">		<div class="clear-sm"></div>		<div><div id="authorable-footer">	<div><div class="columnControl parbase section">	        	<section class="VS-T-40 VS-B-0   white-border none-opacity-0">		<div class="container">																            	<div>		<div class="row row-eq-height   white-border ">	            	        <div data-index="col0" class="col-ewcm-xs-6 col-ewcm-md-2 col-ewcm-sm-4 ">        	        <div><div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>ソリューション</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li></ul></div></div></div></div>            	</div>	            	        <div data-index="col1" class="col-ewcm-xs-6 col-ewcm-md-2 col-ewcm-sm-4 ">        	        <div><div class="internationalizer parbase section"><div class="internationalizer-component">        				<!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        								<div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>業界</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul></div></div></div>			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-UK"		<div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>Industries</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx]</li><li>[hrefx]<a href="/industries/legal-it-solutions.html"></a></li><li>[hrefx]</li><li>[hrefx]</li></ul></div></div></div>		-->	</div></div></div>            	</div>	            	        <div data-index="col2" class="col-ewcm-xs-6 col-ewcm-md-2 col-ewcm-sm-4 ">        	        <div><div class="internationalizer parbase section"><div class="internationalizer-component">        				<!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        								<div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>製品＆サービス</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li></ul></div></div></div>			</div></div></div>            	</div>	            	        <div data-index="col3" class="col-ewcm-xs-6 col-ewcm-md-2 col-ewcm-sm-4 ">        	        <div><div class="internationalizer parbase section"><div class="internationalizer-component">        				<!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        								<div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>データセンター</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li></ul></div></div></div>			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="DE,EN-UK"		<div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>Data Centers</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul></div></div></div>		-->	</div></div></div>            	</div>	            	        <div data-index="col4" class="col-ewcm-xs-6 col-ewcm-md-2 col-ewcm-sm-4 ">        	        <div><div class="internationalizer parbase section"><div class="internationalizer-component">        				<!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        								<div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>リソース</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]<br /></li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li></ul></div></div></div>			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-UK"		<div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>Resources</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx]</li><li>[hrefx]<br /></li><li>[hrefx]</li><li>[hrefx]<br /></li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul></div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-AU,EN-HK,EN-SG"		<div class="commonHeadline section"><div class="commonHeadline  leftAlign  VS-T-10 VS-B-20 large black-font">	    	    		    <div><b>Resources</b></div>        </div></div><div class="footerLinkList section">    <div class="footerListComponent">    <div><ul><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]<br /></li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul></div></div></div>		-->	</div></div></div>            	</div>	            	        <div data-index="col5" class="col-ewcm-xs-6 col-ewcm-md-2 col-ewcm-sm-4 ">        	        <div></div>            	</div>	                </div>    </div>        					</div>	</section></div></div></div></div>	</div>		<div class="container-full-width full-width-divider VS-T-40"></div>		<div>		 <div><div class="pageCopyrightFooter page">			<div class="container">				<div class="row">			<div id="bottom-menu" class="col-xs-12">				<div class="col-xs-12 col-sm-3">					<div><div class="image parbase section">    <a href="http://www.centurylink.co.jp/?1036077272;amdU78nF2DVDVu6CGk6UViq6gPchau6CgZU.x1" target="_self">                            <p class="image-align leftAlign">                <img src="http://www.centurylink.com/business/enterprise/hidden/enterprise-copyright-footer/_jcr_content/left-par/image.img.png/1460643156031.png" alt="CenturyLink" class="VS-T-10 VS-B-0 "/>            </p>                </a>    <section class="imageModal">    <div id="myModal8434" class="modal fade" role="dialog">			        <div class="image-dialog">                 <div class="image-content">                <div class="clearfix image-header">                    <button type="button" class="close fa fa-times" data-dismiss="modal"></button>                </div>                <div class="image-body">                    <img src="http://www.centurylink.com/business/enterprise/hidden/enterprise-copyright-footer/_jcr_content/left-par/image.img.png/1460643156031.png" alt="CenturyLink" class=" img-responsive"/>                </div>            </div>        </div>    </div></section></div></div>				</div>				<div class="col-xs-12 col-sm-9 normal">					<div><div class="internationalizer parbase section"><div class="internationalizer-component">        				<!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->			</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="DE"		<div class="text parbase section"><div class="textComponent singleSpaceList  VS-B-20 normalCascade dark-gray-fontCascade">	<div class="start">	    <div><ul><li><a href="/business/enterprise/about-us/" target="_blank">About CenturyLink<br /> </a></li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul><ul><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul></div>	</div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-CA,FR"		<div class="text parbase section"><div class="textComponent singleSpaceList  VS-B-20 normalCascade dark-gray-fontCascade">	<div class="start">	    <div><ul><li><a href="/business/enterprise/about-us/" target="_blank">About CenturyLink<br /> </a></li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul><ul><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul></div>	</div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        						<!-- mp_trans_add="EN-UK"		<div class="text parbase section"><div class="textComponent singleSpaceList  VS-B-20 normalCascade dark-gray-fontCascade">	<div class="start">	    <div><ul><li><a href="/business/enterprise/about-us/" target="_blank">About CenturyLink<br /> </a></li><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul><ul><li>[hrefx]</li><li>[hrefx]</li><li>[hrefx]</li></ul></div>	</div></div></div>		-->	</div></div><div class="internationalizer parbase section"><div class="internationalizer-component">        								<div class="text parbase section"><div class="textComponent singleSpaceList  VS-B-20 normalCascade dark-gray-fontCascade">	<div class="start">	    <div><ul><li><a href="http://www.centurylink.co.jp/about-us/" target="_blank">日本センチュリーリンクについて<br /> </a></li><li>[hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx]</li></ul><ul><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li></ul></div>	</div></div></div>			</div></div></div>                    <ul class="last-link-ul">		        		<li class="last-link">                             <!-- mp_trans_remove_start --><!-- mp_trans_remove_end -->                                                                &copy;<span id="fullyear" class="last-link">2017</span> CenturyLink. All Rights Reserved. 第三者の商標はすべて、該当する各社の所有物です。                                    <!-- mp_trans_add="DE"                            &copy;<span id="fullyear" class="last-link">2017</span> CENTURYLINK Alle Rechte vorbehalten. Das CenturyLink-Markenzeichen, -Logo und bestimmte CenturyLink-Produktnamen sind Eigentum von CenturyLink. Alle anderen Marken Eigentum der jeweiligen Inhaber. | Qwest Germany, GmbH.                            -->                            <!-- mp_trans_add="EN-UK"                            &copy;<span id="fullyear" class="last-link">2017</span> CENTURYLINK All Rights Reserved. The CenturyLink mark, pathways logo and certain CenturyLink product names are the property of CenturyLink. All other marks are the property of their respective owners.<br/>                            Centurylink, Ltd. | Registered in England | Registration No: 3816299 | Registered Office: 230 Wharfedale Road, Winnersh Triangle, Wokingham, Berkshire.                            -->		        	   </li>		          	</ul>				</div>			</div>		</div>	</div></div></div>	</div></footer>	<!--More detailed timing info is available by uncommenting some code in the timing.jsp componentTiming chart URL:http://chart.apis.google.com/chart?chtt=it-risk-mitigation.html+%285484ms%29&cht=bhs&chxt=x&chco=c6d9fd,4d89f9&chbh=a&chds=0,5484,0,5484&chxr=0,0,5484&chd=t:34,36,37,38,40,264,268,268,268,272,273,273,274,274,458,458,459,460,696,697,698,698,698,713,714,714,716,717,717,719,719,720,722,896,896,896,899,899,899,901,902,902,1007,1011,1011,1012,1014,1014,1015,1015,1015,1016,1016,1017,1021,1021,1022,1024,1024,1024,1408,1408,1409,1444,1448,1448,1449,1451,1451,1451,1479,1479,1480,1482,1483,1483,1484,1564,1564,1565,1567,1567,1568,1570,1570,1571,1573,1747,1748,1748,1751,1752,1752,1756,1756,1793,1793,1793,1794,1794,1794,1794,1798,1799,1799,1984,1984,1985,1987,1987,1988,1989,1989,1992,2181,2182,2182,2186,2284,2411,2411,2414,2507,2507,2508,2508,2508,2509,2783,2784,2784,3090,3093,3094,3094,3099,3206,3207,3207,3211,3212,3213,3214,3302,3304,3304,3305,3308,3310,3311,3311,3437,3439,3440,3440,3443,3456,3457,3458,3462,3464,3799,3800,3819,4233,4233,4233,4234,4235,4235,4236,4237,4237,4237,4238,4239,4355,4355,4355,4538,4539,4540,4540,4540,4541,4542,4542,4543,4544,4544,4544,4545,4546,4547,4547,4548,4565,4566,4566,4567,4568,4568,4568,4876,4912,4913,4913,4913,4915,4916,4917,4917,4917,4918,4920,4920,4920,4921,4921,4921,5046,5195,5196,5196,5197,5198,5199,5199,5200,5200,5201,5202,5203,5203,5203,5204,5239,5239,5239,5240,5240,5241,5241,5241,5412,5412,5413,5414,5414,5414,5449,5450,5450,5450,5452,5453,5453,5453,5455,5455,5456,5456,5457,5458,5458,5459|7,1,1,1,0,3,0,428,3195,0,1,185,0,184,0,237,1,235,1,318,0,24,317,0,2,2,0,2,2,0,3,2,285,0,2,2,0,2,2,0,104,105,8,0,3,2,0,0,0,0,467,0,466,427,0,3,2,0,384,384,0,36,35,38,0,3,2,0,28,28,0,3,2,311,0,310,89,0,3,2,0,3,2,0,3,2,220,0,3,3,1,3,3,0,37,0,1670,1670,0,1669,1669,1669,0,1664,1664,0,2,1,0,519,192,0,191,188,103,0,102,98,222,0,95,92,0,1,0,0,955,273,309,0,308,1,112,0,111,106,6,0,5,1,91,0,89,1,1,5,4,1,128,0,127,1,16,0,15,12,7,0,5,1,1775,0,1439,1420,0,1,2,1,0,307,3,0,1,2,1,299,0,182,183,0,3,0,1,2,1,0,24,3,0,1,2,1,20,0,19,17,1,0,353,345,0,308,344,36,4,0,1,3,0,3,0,1,2,1,0,275,318,0,125,274,149,3,0,2,0,0,1,3,1,2,1,36,0,1,35,34,0,0,0,244,244,0,171,171,0,72,36,0,2,35,3,0,2,2,2,0,1,1,0,2,1,1,27,0,26,25&chly=contentHeaderENT.html|spotLight.html|spotLight.html|spotLight.html|spotLight.html|subNavigation.html|par%29|columnControl.html|parsys.jsp|col0%29|seoHeadline.html|parsys.jsp|commonHeadline.html|commonHeadline.html|col1%29|parsys.jsp|text.html|image.html|impactStrip.html|internationalizer.html|international%29|columnControl.html|parsys.jsp|col0%29|articleTeaser.html|parsys.jsp|col1%29|articleTeaser.html|parsys.jsp|col2%29|parsys.jsp|articleTeaser.html|columnControl.html|col0%29|articleTeaser.html|parsys.jsp|col1%29|articleTeaser.html|parsys.jsp|col2%29|articleTeaser.html|parsys.jsp|columnControl.html|col0%29|parsys.jsp|articleTeaser.html|col1%29|parsys.jsp|col2%29|parsys.jsp|internationalizer.html|international%29|parsys.jsp|columnControl.html|col0%29|parsys.jsp|articleTeaser.html|col1%29|articleTeaser.html|parsys.jsp|col2%29|parsys.jsp|articleTeaser.html|columnControl.html|col0%29|parsys.jsp|articleTeaser.html|col1%29|articleTeaser.html|parsys.jsp|col2%29|parsys.jsp|articleTeaser.html|internationalizer.html|international%29|parsys.jsp|columnControl.html|col0%29|parsys.jsp|articleTeaser.html|col1%29|parsys.jsp|articleTeaser.html|col2%29|parsys.jsp|articleTeaser.html|columnControl.html|col0%29|articleTeaser.html|parsys.jsp|col1%29|articleTeaser.html|parsys.jsp|col2%29|parsys.jsp|start-bar.main.html%29|Page.jsp|reference.jsp|par%29|columnControl.html|parsys.jsp|main.html|col0%29|columnControl.html|parsys.jsp|toppar%29|parsys.jsp|commonHeadline.html|col0%29|parsys.jsp|internationalizer.html|international%29|parsys.jsp|actionTile.html|internationalizer.html|international%29|parsys.jsp|actionTile.html|internationalizer.html|international%29|parsys.jsp|actionTile.html|col1%29|parsys.jsp|dtmPersonalizer.html|col2%29|parsys.jsp|actionTile.html|internationalizer.html|international%29|parsys.jsp|text.html|internationalizer.html|international%29|parsys.jsp|text.html|internationalizer.html|international%29|parsys.jsp|text.html|internationalizer.html|international%29|parsys.jsp|text.html|international%29|internationalizer.html|parsys.jsp|text.html|internationalizer.html|international%29|parsys.jsp|text.html|internationalizer.html|international%29|parsys.jsp|text.html|internationalizer.html|international%29|parsys.jsp|text.html|extendedFooter.html|par%29|parsys.jsp|columnControl.html|col0%29|commonHeadline.html|parsys.jsp|footerLinkList.html|col1%29|parsys.jsp|internationalizer.html|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|internationalizer.html|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|internationalizer.html|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|col2%29|parsys.jsp|internationalizer.html|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|internationalizer.html|international%29|parsys.jsp|commonHeadline.html|footerLinkList.html|col3%29|parsys.jsp|internationalizer.html|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|internationalizer.html|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|internationalizer.html|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|col4%29|internationalizer.html|parsys.jsp|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|internationalizer.html|international%29|parsys.jsp|commonHeadline.html|footerLinkList.html|international%29|internationalizer.html|commonHeadline.html|parsys.jsp|footerLinkList.html|internationalizer.html|international%29|commonHeadline.html|parsys.jsp|footerLinkList.html|col5%29|parsys.jsp|enterprise-copyright-f...|main.html|Page.jsp|left-par%29|image.html|parsys.jsp|right-par%29|parsys.jsp|internationalizer.html|international%29|text.html|parsys.jsp|internationalizer.html|international%29|text.html|parsys.jsp|internationalizer.html|international%29|text.html|parsys.jsp|international%29|internationalizer.html|text.html|parsys.jsp|internationalizer.html|international%29|parsys.jsp|text.html&chs=600x500-->	    <script type="text/javascript" src="http://www.centurylink.com/etc/clientlibs/foundation/shared.min.js"></script><script type="text/javascript" src="http://www.centurylink.com/etc/designs/ewcmbiz/clientlibs-all.min.js"></script><script type="text/javascript">	new WOW().init();</script>	<!-- Adobe DTM Bottom Injection Point -->	<script data.sly.test type="text/javascript">if (typeof _satellite !== "undefined") _satellite.pageBottom();</script>	<!--mp_easylink_begins-->	<script type="text/javascript" id="mpelid" src="http://savvis.mpeasylink.com/mpel/mpel.js" async></script>	<!--mp_easylink_ends--><script>$(window).load(function(){$("#Company").attr("placeholder","\u9078\u629e\u3059\u308b\u306b\u306f\u3001\u5165\u529b\u3092\u958b\u59cb\u3057\u3066\u304f\u3060\u3055\u3044\u3002");});</script> </body><!-- URCHIN CODE START --><script type="text/javascript">(function() {var MPJsHost = document.createElement('script'); MPJsHost.type = 'text/javascript';MPJsHost.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'analytics.convertlanguage.com/urchin.js.php';var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(MPJsHost, s);})();</script><!-- URCHIN CODE END --><!--Processed by MotionPoint's TransMotion (r) translation engine v9.4.27.1 7/5/2017. Copyright© 2003-2017 MotionPoint Corporation. All Rights Reserved. This product is protected under one or more of the following US patents: 7584216, 7580960, 7627479, 7627817, 7996417, 8065294. Other patents pending.--></html>